var annotated_dup =
[
    [ "__comp_state", "struct____comp__state.html", "struct____comp__state" ],
    [ "_EMC_TELEOP_DATA", "struct__EMC__TELEOP__DATA.html", "struct__EMC__TELEOP__DATA" ],
    [ "_HIDD_ATTRIBUTES", "struct__HIDD__ATTRIBUTES.html", "struct__HIDD__ATTRIBUTES" ],
    [ "_HIDP_CAPS", "struct__HIDP__CAPS.html", "struct__HIDP__CAPS" ],
    [ "all_encoder_data_t", "structall__encoder__data__t.html", "structall__encoder__data__t" ],
    [ "all_IO_data_t", "structall__IO__data__t.html", "structall__IO__data__t" ],
    [ "all_joints_home_data_t", "structall__joints__home__data__t.html", "structall__joints__home__data__t" ],
    [ "all_PoExtBus_data_t", "structall__PoExtBus__data__t.html", "structall__PoExtBus__data__t" ],
    [ "all_PoNET_data_t", "structall__PoNET__data__t.html", "structall__PoNET__data__t" ],
    [ "all_sequences_home_data_t", "structall__sequences__home__data__t.html", "structall__sequences__home__data__t" ],
    [ "Arc9", "structArc9.html", "structArc9" ],
    [ "async_transaction_t", "structasync__transaction__t.html", "structasync__transaction__t" ],
    [ "AxisConfig_t", "structAxisConfig__t.html", "structAxisConfig__t" ],
    [ "BlendGeom3", "structBlendGeom3.html", "structBlendGeom3" ],
    [ "BlendParameters", "structBlendParameters.html", "structBlendParameters" ],
    [ "BlendPoints3", "structBlendPoints3.html", "structBlendPoints3" ],
    [ "block_struct", "structblock__struct.html", "structblock__struct" ],
    [ "BUFFERS_LIST_NODE", "structBUFFERS__LIST__NODE.html", "structBUFFERS__LIST__NODE" ],
    [ "CANON_POSITION", "structCANON__POSITION.html", "structCANON__POSITION" ],
    [ "CANON_TOOL_TABLE", "structCANON__TOOL__TABLE.html", "structCANON__TOOL__TABLE" ],
    [ "CANON_VECTOR", "structCANON__VECTOR.html", "structCANON__VECTOR" ],
    [ "CanonConfig_t", "structCanonConfig__t.html", "structCanonConfig__t" ],
    [ "CanonSpindle_t", "structCanonSpindle__t.html", "structCanonSpindle__t" ],
    [ "CLIENT_TCP_PORT", "classCLIENT__TCP__PORT.html", "classCLIENT__TCP__PORT" ],
    [ "CMS", "classCMS.html", "classCMS" ],
    [ "CMS_ASCII_UPDATER", "classCMS__ASCII__UPDATER.html", "classCMS__ASCII__UPDATER" ],
    [ "CMS_DIAG_HEADER", "classCMS__DIAG__HEADER.html", "classCMS__DIAG__HEADER" ],
    [ "CMS_DIAG_PROC_INFO", "classCMS__DIAG__PROC__INFO.html", "classCMS__DIAG__PROC__INFO" ],
    [ "CMS_DIAG_STATIC_PROC_INFO", "classCMS__DIAG__STATIC__PROC__INFO.html", "classCMS__DIAG__STATIC__PROC__INFO" ],
    [ "CMS_DIAGNOSTICS_INFO", "classCMS__DIAGNOSTICS__INFO.html", "classCMS__DIAGNOSTICS__INFO" ],
    [ "CMS_DISPLAY_ASCII_UPDATER", "classCMS__DISPLAY__ASCII__UPDATER.html", "classCMS__DISPLAY__ASCII__UPDATER" ],
    [ "CMS_HEADER", "structCMS__HEADER.html", "structCMS__HEADER" ],
    [ "CMS_HOST_ALIAS_ENTRY", "classCMS__HOST__ALIAS__ENTRY.html", "classCMS__HOST__ALIAS__ENTRY" ],
    [ "CMS_POINTER_TABLE_ENTRY", "structCMS__POINTER__TABLE__ENTRY.html", "structCMS__POINTER__TABLE__ENTRY" ],
    [ "CMS_QUEUING_HEADER", "structCMS__QUEUING__HEADER.html", "structCMS__QUEUING__HEADER" ],
    [ "CMS_SERVER", "classCMS__SERVER.html", "classCMS__SERVER" ],
    [ "CMS_SERVER_LOCAL_PORT", "classCMS__SERVER__LOCAL__PORT.html", "classCMS__SERVER__LOCAL__PORT" ],
    [ "CMS_SERVER_REMOTE_PORT", "classCMS__SERVER__REMOTE__PORT.html", "classCMS__SERVER__REMOTE__PORT" ],
    [ "CMS_SERVER_REMOTE_TCP_PORT", "classCMS__SERVER__REMOTE__TCP__PORT.html", "classCMS__SERVER__REMOTE__TCP__PORT" ],
    [ "CMS_UPDATER", "classCMS__UPDATER.html", "classCMS__UPDATER" ],
    [ "CMS_USER", "classCMS__USER.html", "classCMS__USER" ],
    [ "CMS_USER_CONNECT_STRUCT", "structCMS__USER__CONNECT__STRUCT.html", "structCMS__USER__CONNECT__STRUCT" ],
    [ "CMS_XDR_UPDATER", "classCMS__XDR__UPDATER.html", "classCMS__XDR__UPDATER" ],
    [ "context_struct", "structcontext__struct.html", "structcontext__struct" ],
    [ "CONTROL_POINT", "structCONTROL__POINT.html", "structCONTROL__POINT" ],
    [ "CUBIC_COEFF", "structCUBIC__COEFF.html", "structCUBIC__COEFF" ],
    [ "CUBIC_STRUCT", "structCUBIC__STRUCT.html", "structCUBIC__STRUCT" ],
    [ "EMC_ABORT", "classEMC__ABORT.html", "classEMC__ABORT" ],
    [ "EMC_AUX_CMD_MSG", "classEMC__AUX__CMD__MSG.html", "classEMC__AUX__CMD__MSG" ],
    [ "EMC_AUX_ESTOP_OFF", "classEMC__AUX__ESTOP__OFF.html", "classEMC__AUX__ESTOP__OFF" ],
    [ "EMC_AUX_ESTOP_ON", "classEMC__AUX__ESTOP__ON.html", "classEMC__AUX__ESTOP__ON" ],
    [ "EMC_AUX_ESTOP_RESET", "classEMC__AUX__ESTOP__RESET.html", "classEMC__AUX__ESTOP__RESET" ],
    [ "EMC_AUX_INPUT_WAIT", "classEMC__AUX__INPUT__WAIT.html", "classEMC__AUX__INPUT__WAIT" ],
    [ "EMC_AUX_STAT", "classEMC__AUX__STAT.html", "classEMC__AUX__STAT" ],
    [ "EMC_AUX_STAT_MSG", "classEMC__AUX__STAT__MSG.html", "classEMC__AUX__STAT__MSG" ],
    [ "EMC_AXIS_STAT", "classEMC__AXIS__STAT.html", "classEMC__AXIS__STAT" ],
    [ "EMC_AXIS_STAT_MSG", "classEMC__AXIS__STAT__MSG.html", "classEMC__AXIS__STAT__MSG" ],
    [ "EMC_CMD_MSG", "classEMC__CMD__MSG.html", "classEMC__CMD__MSG" ],
    [ "EMC_COOLANT_CMD_MSG", "classEMC__COOLANT__CMD__MSG.html", "classEMC__COOLANT__CMD__MSG" ],
    [ "EMC_COOLANT_FLOOD_OFF", "classEMC__COOLANT__FLOOD__OFF.html", "classEMC__COOLANT__FLOOD__OFF" ],
    [ "EMC_COOLANT_FLOOD_ON", "classEMC__COOLANT__FLOOD__ON.html", "classEMC__COOLANT__FLOOD__ON" ],
    [ "EMC_COOLANT_MIST_OFF", "classEMC__COOLANT__MIST__OFF.html", "classEMC__COOLANT__MIST__OFF" ],
    [ "EMC_COOLANT_MIST_ON", "classEMC__COOLANT__MIST__ON.html", "classEMC__COOLANT__MIST__ON" ],
    [ "EMC_COOLANT_STAT", "classEMC__COOLANT__STAT.html", "classEMC__COOLANT__STAT" ],
    [ "EMC_COOLANT_STAT_MSG", "classEMC__COOLANT__STAT__MSG.html", "classEMC__COOLANT__STAT__MSG" ],
    [ "EMC_EXEC_PLUGIN_CALL", "classEMC__EXEC__PLUGIN__CALL.html", "classEMC__EXEC__PLUGIN__CALL" ],
    [ "EMC_HALT", "classEMC__HALT.html", "classEMC__HALT" ],
    [ "EMC_INIT", "classEMC__INIT.html", "classEMC__INIT" ],
    [ "EMC_IO_ABORT", "classEMC__IO__ABORT.html", "classEMC__IO__ABORT" ],
    [ "EMC_IO_CMD_MSG", "classEMC__IO__CMD__MSG.html", "classEMC__IO__CMD__MSG" ],
    [ "EMC_IO_HALT", "classEMC__IO__HALT.html", "classEMC__IO__HALT" ],
    [ "EMC_IO_INIT", "classEMC__IO__INIT.html", "classEMC__IO__INIT" ],
    [ "EMC_IO_PLUGIN_CALL", "classEMC__IO__PLUGIN__CALL.html", "classEMC__IO__PLUGIN__CALL" ],
    [ "EMC_IO_SET_CYCLE_TIME", "classEMC__IO__SET__CYCLE__TIME.html", "classEMC__IO__SET__CYCLE__TIME" ],
    [ "EMC_IO_STAT", "classEMC__IO__STAT.html", "classEMC__IO__STAT" ],
    [ "EMC_IO_STAT_MSG", "classEMC__IO__STAT__MSG.html", "classEMC__IO__STAT__MSG" ],
    [ "EMC_JOG_ABS", "classEMC__JOG__ABS.html", "classEMC__JOG__ABS" ],
    [ "EMC_JOG_CMD_MSG", "classEMC__JOG__CMD__MSG.html", "classEMC__JOG__CMD__MSG" ],
    [ "EMC_JOG_CONT", "classEMC__JOG__CONT.html", "classEMC__JOG__CONT" ],
    [ "EMC_JOG_INCR", "classEMC__JOG__INCR.html", "classEMC__JOG__INCR" ],
    [ "EMC_JOG_STOP", "classEMC__JOG__STOP.html", "classEMC__JOG__STOP" ],
    [ "EMC_JOINT_ABORT", "classEMC__JOINT__ABORT.html", "classEMC__JOINT__ABORT" ],
    [ "EMC_JOINT_ACTIVATE", "classEMC__JOINT__ACTIVATE.html", "classEMC__JOINT__ACTIVATE" ],
    [ "EMC_JOINT_CMD_MSG", "classEMC__JOINT__CMD__MSG.html", "classEMC__JOINT__CMD__MSG" ],
    [ "EMC_JOINT_DEACTIVATE", "classEMC__JOINT__DEACTIVATE.html", "classEMC__JOINT__DEACTIVATE" ],
    [ "EMC_JOINT_DISABLE", "classEMC__JOINT__DISABLE.html", "classEMC__JOINT__DISABLE" ],
    [ "EMC_JOINT_ENABLE", "classEMC__JOINT__ENABLE.html", "classEMC__JOINT__ENABLE" ],
    [ "EMC_JOINT_HALT", "classEMC__JOINT__HALT.html", "classEMC__JOINT__HALT" ],
    [ "EMC_JOINT_HOME", "classEMC__JOINT__HOME.html", "classEMC__JOINT__HOME" ],
    [ "EMC_JOINT_INIT", "classEMC__JOINT__INIT.html", "classEMC__JOINT__INIT" ],
    [ "EMC_JOINT_LOAD_COMP", "classEMC__JOINT__LOAD__COMP.html", "classEMC__JOINT__LOAD__COMP" ],
    [ "EMC_JOINT_OVERRIDE_LIMITS", "classEMC__JOINT__OVERRIDE__LIMITS.html", "classEMC__JOINT__OVERRIDE__LIMITS" ],
    [ "EMC_JOINT_SET_BACKLASH", "classEMC__JOINT__SET__BACKLASH.html", "classEMC__JOINT__SET__BACKLASH" ],
    [ "EMC_JOINT_SET_FERROR", "classEMC__JOINT__SET__FERROR.html", "classEMC__JOINT__SET__FERROR" ],
    [ "EMC_JOINT_SET_HOMING_PARAMS", "classEMC__JOINT__SET__HOMING__PARAMS.html", "classEMC__JOINT__SET__HOMING__PARAMS" ],
    [ "EMC_JOINT_SET_JOINT", "classEMC__JOINT__SET__JOINT.html", "classEMC__JOINT__SET__JOINT" ],
    [ "EMC_JOINT_SET_MAX_POSITION_LIMIT", "classEMC__JOINT__SET__MAX__POSITION__LIMIT.html", "classEMC__JOINT__SET__MAX__POSITION__LIMIT" ],
    [ "EMC_JOINT_SET_MAX_VELOCITY", "classEMC__JOINT__SET__MAX__VELOCITY.html", "classEMC__JOINT__SET__MAX__VELOCITY" ],
    [ "EMC_JOINT_SET_MIN_FERROR", "classEMC__JOINT__SET__MIN__FERROR.html", "classEMC__JOINT__SET__MIN__FERROR" ],
    [ "EMC_JOINT_SET_MIN_POSITION_LIMIT", "classEMC__JOINT__SET__MIN__POSITION__LIMIT.html", "classEMC__JOINT__SET__MIN__POSITION__LIMIT" ],
    [ "EMC_JOINT_SET_UNITS", "classEMC__JOINT__SET__UNITS.html", "classEMC__JOINT__SET__UNITS" ],
    [ "EMC_JOINT_STAT", "classEMC__JOINT__STAT.html", "classEMC__JOINT__STAT" ],
    [ "EMC_JOINT_STAT_MSG", "classEMC__JOINT__STAT__MSG.html", "classEMC__JOINT__STAT__MSG" ],
    [ "EMC_JOINT_UNHOME", "classEMC__JOINT__UNHOME.html", "classEMC__JOINT__UNHOME" ],
    [ "EMC_LUBE_CMD_MSG", "classEMC__LUBE__CMD__MSG.html", "classEMC__LUBE__CMD__MSG" ],
    [ "EMC_LUBE_OFF", "classEMC__LUBE__OFF.html", "classEMC__LUBE__OFF" ],
    [ "EMC_LUBE_ON", "classEMC__LUBE__ON.html", "classEMC__LUBE__ON" ],
    [ "EMC_LUBE_STAT", "classEMC__LUBE__STAT.html", "classEMC__LUBE__STAT" ],
    [ "EMC_LUBE_STAT_MSG", "classEMC__LUBE__STAT__MSG.html", "classEMC__LUBE__STAT__MSG" ],
    [ "EMC_MOTION_ABORT", "classEMC__MOTION__ABORT.html", "classEMC__MOTION__ABORT" ],
    [ "EMC_MOTION_ADAPTIVE", "classEMC__MOTION__ADAPTIVE.html", "classEMC__MOTION__ADAPTIVE" ],
    [ "EMC_MOTION_CMD_MSG", "classEMC__MOTION__CMD__MSG.html", "classEMC__MOTION__CMD__MSG" ],
    [ "EMC_MOTION_HALT", "classEMC__MOTION__HALT.html", "classEMC__MOTION__HALT" ],
    [ "EMC_MOTION_INIT", "classEMC__MOTION__INIT.html", "classEMC__MOTION__INIT" ],
    [ "EMC_MOTION_SET_AOUT", "classEMC__MOTION__SET__AOUT.html", "classEMC__MOTION__SET__AOUT" ],
    [ "EMC_MOTION_SET_DOUT", "classEMC__MOTION__SET__DOUT.html", "classEMC__MOTION__SET__DOUT" ],
    [ "EMC_MOTION_STAT", "classEMC__MOTION__STAT.html", "classEMC__MOTION__STAT" ],
    [ "EMC_MOTION_STAT_MSG", "classEMC__MOTION__STAT__MSG.html", "classEMC__MOTION__STAT__MSG" ],
    [ "EMC_NULL", "classEMC__NULL.html", "classEMC__NULL" ],
    [ "EMC_OPERATOR_DISPLAY", "classEMC__OPERATOR__DISPLAY.html", "classEMC__OPERATOR__DISPLAY" ],
    [ "EMC_OPERATOR_ERROR", "classEMC__OPERATOR__ERROR.html", "classEMC__OPERATOR__ERROR" ],
    [ "EMC_OPERATOR_TEXT", "classEMC__OPERATOR__TEXT.html", "classEMC__OPERATOR__TEXT" ],
    [ "EMC_SET_DEBUG", "classEMC__SET__DEBUG.html", "classEMC__SET__DEBUG" ],
    [ "EMC_SPINDLE_BRAKE_ENGAGE", "classEMC__SPINDLE__BRAKE__ENGAGE.html", "classEMC__SPINDLE__BRAKE__ENGAGE" ],
    [ "EMC_SPINDLE_BRAKE_RELEASE", "classEMC__SPINDLE__BRAKE__RELEASE.html", "classEMC__SPINDLE__BRAKE__RELEASE" ],
    [ "EMC_SPINDLE_CMD_MSG", "classEMC__SPINDLE__CMD__MSG.html", "classEMC__SPINDLE__CMD__MSG" ],
    [ "EMC_SPINDLE_CONSTANT", "classEMC__SPINDLE__CONSTANT.html", "classEMC__SPINDLE__CONSTANT" ],
    [ "EMC_SPINDLE_DECREASE", "classEMC__SPINDLE__DECREASE.html", "classEMC__SPINDLE__DECREASE" ],
    [ "EMC_SPINDLE_INCREASE", "classEMC__SPINDLE__INCREASE.html", "classEMC__SPINDLE__INCREASE" ],
    [ "EMC_SPINDLE_OFF", "classEMC__SPINDLE__OFF.html", "classEMC__SPINDLE__OFF" ],
    [ "EMC_SPINDLE_ON", "classEMC__SPINDLE__ON.html", "classEMC__SPINDLE__ON" ],
    [ "EMC_SPINDLE_ORIENT", "classEMC__SPINDLE__ORIENT.html", "classEMC__SPINDLE__ORIENT" ],
    [ "EMC_SPINDLE_SPEED", "classEMC__SPINDLE__SPEED.html", "classEMC__SPINDLE__SPEED" ],
    [ "EMC_SPINDLE_STAT", "classEMC__SPINDLE__STAT.html", "classEMC__SPINDLE__STAT" ],
    [ "EMC_SPINDLE_STAT_MSG", "classEMC__SPINDLE__STAT__MSG.html", "classEMC__SPINDLE__STAT__MSG" ],
    [ "EMC_SPINDLE_WAIT_ORIENT_COMPLETE", "classEMC__SPINDLE__WAIT__ORIENT__COMPLETE.html", "classEMC__SPINDLE__WAIT__ORIENT__COMPLETE" ],
    [ "EMC_STAT", "classEMC__STAT.html", "classEMC__STAT" ],
    [ "EMC_STAT_MSG", "classEMC__STAT__MSG.html", "classEMC__STAT__MSG" ],
    [ "EMC_SYSTEM_CMD", "classEMC__SYSTEM__CMD.html", "classEMC__SYSTEM__CMD" ],
    [ "EMC_TASK_ABORT", "classEMC__TASK__ABORT.html", "classEMC__TASK__ABORT" ],
    [ "EMC_TASK_CMD_MSG", "classEMC__TASK__CMD__MSG.html", "classEMC__TASK__CMD__MSG" ],
    [ "EMC_TASK_HALT", "classEMC__TASK__HALT.html", "classEMC__TASK__HALT" ],
    [ "EMC_TASK_INIT", "classEMC__TASK__INIT.html", "classEMC__TASK__INIT" ],
    [ "EMC_TASK_PLAN_CLOSE", "classEMC__TASK__PLAN__CLOSE.html", "classEMC__TASK__PLAN__CLOSE" ],
    [ "EMC_TASK_PLAN_END", "classEMC__TASK__PLAN__END.html", "classEMC__TASK__PLAN__END" ],
    [ "EMC_TASK_PLAN_EXECUTE", "classEMC__TASK__PLAN__EXECUTE.html", "classEMC__TASK__PLAN__EXECUTE" ],
    [ "EMC_TASK_PLAN_FORWARD", "classEMC__TASK__PLAN__FORWARD.html", "classEMC__TASK__PLAN__FORWARD" ],
    [ "EMC_TASK_PLAN_INIT", "classEMC__TASK__PLAN__INIT.html", "classEMC__TASK__PLAN__INIT" ],
    [ "EMC_TASK_PLAN_OPEN", "classEMC__TASK__PLAN__OPEN.html", "classEMC__TASK__PLAN__OPEN" ],
    [ "EMC_TASK_PLAN_OPTIONAL_STOP", "classEMC__TASK__PLAN__OPTIONAL__STOP.html", "classEMC__TASK__PLAN__OPTIONAL__STOP" ],
    [ "EMC_TASK_PLAN_PAUSE", "classEMC__TASK__PLAN__PAUSE.html", "classEMC__TASK__PLAN__PAUSE" ],
    [ "EMC_TASK_PLAN_READ", "classEMC__TASK__PLAN__READ.html", "classEMC__TASK__PLAN__READ" ],
    [ "EMC_TASK_PLAN_RESUME", "classEMC__TASK__PLAN__RESUME.html", "classEMC__TASK__PLAN__RESUME" ],
    [ "EMC_TASK_PLAN_REVERSE", "classEMC__TASK__PLAN__REVERSE.html", "classEMC__TASK__PLAN__REVERSE" ],
    [ "EMC_TASK_PLAN_RUN", "classEMC__TASK__PLAN__RUN.html", "classEMC__TASK__PLAN__RUN" ],
    [ "EMC_TASK_PLAN_SET_BLOCK_DELETE", "classEMC__TASK__PLAN__SET__BLOCK__DELETE.html", "classEMC__TASK__PLAN__SET__BLOCK__DELETE" ],
    [ "EMC_TASK_PLAN_SET_OPTIONAL_STOP", "classEMC__TASK__PLAN__SET__OPTIONAL__STOP.html", "classEMC__TASK__PLAN__SET__OPTIONAL__STOP" ],
    [ "EMC_TASK_PLAN_STEP", "classEMC__TASK__PLAN__STEP.html", "classEMC__TASK__PLAN__STEP" ],
    [ "EMC_TASK_PLAN_SYNCH", "classEMC__TASK__PLAN__SYNCH.html", "classEMC__TASK__PLAN__SYNCH" ],
    [ "EMC_TASK_SET_MODE", "classEMC__TASK__SET__MODE.html", "classEMC__TASK__SET__MODE" ],
    [ "EMC_TASK_SET_STATE", "classEMC__TASK__SET__STATE.html", "classEMC__TASK__SET__STATE" ],
    [ "EMC_TASK_STAT", "classEMC__TASK__STAT.html", "classEMC__TASK__STAT" ],
    [ "EMC_TASK_STAT_MSG", "classEMC__TASK__STAT__MSG.html", "classEMC__TASK__STAT__MSG" ],
    [ "EMC_TOOL_ABORT", "classEMC__TOOL__ABORT.html", "classEMC__TOOL__ABORT" ],
    [ "EMC_TOOL_CMD_MSG", "classEMC__TOOL__CMD__MSG.html", "classEMC__TOOL__CMD__MSG" ],
    [ "EMC_TOOL_HALT", "classEMC__TOOL__HALT.html", "classEMC__TOOL__HALT" ],
    [ "EMC_TOOL_INIT", "classEMC__TOOL__INIT.html", "classEMC__TOOL__INIT" ],
    [ "EMC_TOOL_LOAD", "classEMC__TOOL__LOAD.html", "classEMC__TOOL__LOAD" ],
    [ "EMC_TOOL_LOAD_TOOL_TABLE", "classEMC__TOOL__LOAD__TOOL__TABLE.html", "classEMC__TOOL__LOAD__TOOL__TABLE" ],
    [ "EMC_TOOL_PREPARE", "classEMC__TOOL__PREPARE.html", "classEMC__TOOL__PREPARE" ],
    [ "EMC_TOOL_SET_NUMBER", "classEMC__TOOL__SET__NUMBER.html", "classEMC__TOOL__SET__NUMBER" ],
    [ "EMC_TOOL_SET_OFFSET", "classEMC__TOOL__SET__OFFSET.html", "classEMC__TOOL__SET__OFFSET" ],
    [ "EMC_TOOL_START_CHANGE", "classEMC__TOOL__START__CHANGE.html", "classEMC__TOOL__START__CHANGE" ],
    [ "EMC_TOOL_STAT", "classEMC__TOOL__STAT.html", "classEMC__TOOL__STAT" ],
    [ "EMC_TOOL_STAT_MSG", "classEMC__TOOL__STAT__MSG.html", "classEMC__TOOL__STAT__MSG" ],
    [ "EMC_TOOL_UNLOAD", "classEMC__TOOL__UNLOAD.html", "classEMC__TOOL__UNLOAD" ],
    [ "EMC_TRAJ_ABORT", "classEMC__TRAJ__ABORT.html", "classEMC__TRAJ__ABORT" ],
    [ "EMC_TRAJ_CIRCULAR_MOVE", "classEMC__TRAJ__CIRCULAR__MOVE.html", "classEMC__TRAJ__CIRCULAR__MOVE" ],
    [ "EMC_TRAJ_CLEAR_PROBE_TRIPPED_FLAG", "classEMC__TRAJ__CLEAR__PROBE__TRIPPED__FLAG.html", "classEMC__TRAJ__CLEAR__PROBE__TRIPPED__FLAG" ],
    [ "EMC_TRAJ_CMD_MSG", "classEMC__TRAJ__CMD__MSG.html", "classEMC__TRAJ__CMD__MSG" ],
    [ "EMC_TRAJ_DELAY", "classEMC__TRAJ__DELAY.html", "classEMC__TRAJ__DELAY" ],
    [ "EMC_TRAJ_DISABLE", "classEMC__TRAJ__DISABLE.html", "classEMC__TRAJ__DISABLE" ],
    [ "EMC_TRAJ_ENABLE", "classEMC__TRAJ__ENABLE.html", "classEMC__TRAJ__ENABLE" ],
    [ "EMC_TRAJ_HALT", "classEMC__TRAJ__HALT.html", "classEMC__TRAJ__HALT" ],
    [ "EMC_TRAJ_INIT", "classEMC__TRAJ__INIT.html", "classEMC__TRAJ__INIT" ],
    [ "EMC_TRAJ_LINEAR_MOVE", "classEMC__TRAJ__LINEAR__MOVE.html", "classEMC__TRAJ__LINEAR__MOVE" ],
    [ "EMC_TRAJ_PAUSE", "classEMC__TRAJ__PAUSE.html", "classEMC__TRAJ__PAUSE" ],
    [ "EMC_TRAJ_PROBE", "classEMC__TRAJ__PROBE.html", "classEMC__TRAJ__PROBE" ],
    [ "EMC_TRAJ_RESUME", "classEMC__TRAJ__RESUME.html", "classEMC__TRAJ__RESUME" ],
    [ "EMC_TRAJ_RIGID_TAP", "classEMC__TRAJ__RIGID__TAP.html", "classEMC__TRAJ__RIGID__TAP" ],
    [ "EMC_TRAJ_SET_ACCELERATION", "classEMC__TRAJ__SET__ACCELERATION.html", "classEMC__TRAJ__SET__ACCELERATION" ],
    [ "EMC_TRAJ_SET_AXES", "classEMC__TRAJ__SET__AXES.html", "classEMC__TRAJ__SET__AXES" ],
    [ "EMC_TRAJ_SET_CYCLE_TIME", "classEMC__TRAJ__SET__CYCLE__TIME.html", "classEMC__TRAJ__SET__CYCLE__TIME" ],
    [ "EMC_TRAJ_SET_FH_ENABLE", "classEMC__TRAJ__SET__FH__ENABLE.html", "classEMC__TRAJ__SET__FH__ENABLE" ],
    [ "EMC_TRAJ_SET_FO_ENABLE", "classEMC__TRAJ__SET__FO__ENABLE.html", "classEMC__TRAJ__SET__FO__ENABLE" ],
    [ "EMC_TRAJ_SET_G5X", "classEMC__TRAJ__SET__G5X.html", "classEMC__TRAJ__SET__G5X" ],
    [ "EMC_TRAJ_SET_G92", "classEMC__TRAJ__SET__G92.html", "classEMC__TRAJ__SET__G92" ],
    [ "EMC_TRAJ_SET_HOME", "classEMC__TRAJ__SET__HOME.html", "classEMC__TRAJ__SET__HOME" ],
    [ "EMC_TRAJ_SET_MAX_ACCELERATION", "classEMC__TRAJ__SET__MAX__ACCELERATION.html", "classEMC__TRAJ__SET__MAX__ACCELERATION" ],
    [ "EMC_TRAJ_SET_MAX_VELOCITY", "classEMC__TRAJ__SET__MAX__VELOCITY.html", "classEMC__TRAJ__SET__MAX__VELOCITY" ],
    [ "EMC_TRAJ_SET_MODE", "classEMC__TRAJ__SET__MODE.html", "classEMC__TRAJ__SET__MODE" ],
    [ "EMC_TRAJ_SET_MOTION_ID", "classEMC__TRAJ__SET__MOTION__ID.html", "classEMC__TRAJ__SET__MOTION__ID" ],
    [ "EMC_TRAJ_SET_OFFSET", "classEMC__TRAJ__SET__OFFSET.html", "classEMC__TRAJ__SET__OFFSET" ],
    [ "EMC_TRAJ_SET_RAPID_SCALE", "classEMC__TRAJ__SET__RAPID__SCALE.html", "classEMC__TRAJ__SET__RAPID__SCALE" ],
    [ "EMC_TRAJ_SET_ROTATION", "classEMC__TRAJ__SET__ROTATION.html", "classEMC__TRAJ__SET__ROTATION" ],
    [ "EMC_TRAJ_SET_SCALE", "classEMC__TRAJ__SET__SCALE.html", "classEMC__TRAJ__SET__SCALE" ],
    [ "EMC_TRAJ_SET_SO_ENABLE", "classEMC__TRAJ__SET__SO__ENABLE.html", "classEMC__TRAJ__SET__SO__ENABLE" ],
    [ "EMC_TRAJ_SET_SPINDLE_SCALE", "classEMC__TRAJ__SET__SPINDLE__SCALE.html", "classEMC__TRAJ__SET__SPINDLE__SCALE" ],
    [ "EMC_TRAJ_SET_SPINDLESYNC", "classEMC__TRAJ__SET__SPINDLESYNC.html", "classEMC__TRAJ__SET__SPINDLESYNC" ],
    [ "EMC_TRAJ_SET_TELEOP_ENABLE", "classEMC__TRAJ__SET__TELEOP__ENABLE.html", "classEMC__TRAJ__SET__TELEOP__ENABLE" ],
    [ "EMC_TRAJ_SET_TERM_COND", "classEMC__TRAJ__SET__TERM__COND.html", "classEMC__TRAJ__SET__TERM__COND" ],
    [ "EMC_TRAJ_SET_UNITS", "classEMC__TRAJ__SET__UNITS.html", "classEMC__TRAJ__SET__UNITS" ],
    [ "EMC_TRAJ_SET_VELOCITY", "classEMC__TRAJ__SET__VELOCITY.html", "classEMC__TRAJ__SET__VELOCITY" ],
    [ "EMC_TRAJ_STAT", "classEMC__TRAJ__STAT.html", "classEMC__TRAJ__STAT" ],
    [ "EMC_TRAJ_STAT_MSG", "classEMC__TRAJ__STAT__MSG.html", "classEMC__TRAJ__STAT__MSG" ],
    [ "EMC_TRAJ_STEP", "classEMC__TRAJ__STEP.html", "classEMC__TRAJ__STEP" ],
    [ "EmcIniFile", "classEmcIniFile.html", "classEmcIniFile" ],
    [ "emcmot_axis_status_t", "structemcmot__axis__status__t.html", "structemcmot__axis__status__t" ],
    [ "emcmot_command_t", "structemcmot__command__t.html", "structemcmot__command__t" ],
    [ "emcmot_comp_entry_t", "structemcmot__comp__entry__t.html", "structemcmot__comp__entry__t" ],
    [ "emcmot_comp_t", "structemcmot__comp__t.html", "structemcmot__comp__t" ],
    [ "emcmot_config_t", "structemcmot__config__t.html", "structemcmot__config__t" ],
    [ "emcmot_error_t", "structemcmot__error__t.html", "structemcmot__error__t" ],
    [ "emcmot_internal_t", "structemcmot__internal__t.html", "structemcmot__internal__t" ],
    [ "emcmot_joint_status_t", "structemcmot__joint__status__t.html", "structemcmot__joint__status__t" ],
    [ "emcmot_joint_t", "structemcmot__joint__t.html", "structemcmot__joint__t" ],
    [ "emcmot_status_t", "structemcmot__status__t.html", "structemcmot__status__t" ],
    [ "EmcPose", "structEmcPose.html", "structEmcPose" ],
    [ "genser_struct", "structgenser__struct.html", "structgenser__struct" ],
    [ "go_cart", "structgo__cart.html", "structgo__cart" ],
    [ "go_complex", "structgo__complex.html", "structgo__complex" ],
    [ "go_cubic", "structgo__cubic.html", "structgo__cubic" ],
    [ "go_cyl", "structgo__cyl.html", "structgo__cyl" ],
    [ "go_dh", "structgo__dh.html", "structgo__dh" ],
    [ "go_hom", "structgo__hom.html", "structgo__hom" ],
    [ "go_line", "structgo__line.html", "structgo__line" ],
    [ "go_link", "structgo__link.html", "structgo__link" ],
    [ "go_mat", "structgo__mat.html", "structgo__mat" ],
    [ "go_matrix", "structgo__matrix.html", "structgo__matrix" ],
    [ "go_pk", "structgo__pk.html", "structgo__pk" ],
    [ "go_plane", "structgo__plane.html", "structgo__plane" ],
    [ "go_pose", "structgo__pose.html", "structgo__pose" ],
    [ "go_pp", "structgo__pp.html", "structgo__pp" ],
    [ "go_quadratic", "structgo__quadratic.html", "structgo__quadratic" ],
    [ "go_quartic", "structgo__quartic.html", "structgo__quartic" ],
    [ "go_quat", "structgo__quat.html", "structgo__quat" ],
    [ "go_rpy", "structgo__rpy.html", "structgo__rpy" ],
    [ "go_rvec", "structgo__rvec.html", "structgo__rvec" ],
    [ "go_screw", "structgo__screw.html", "structgo__screw" ],
    [ "go_sph", "structgo__sph.html", "structgo__sph" ],
    [ "go_zyx", "structgo__zyx.html", "structgo__zyx" ],
    [ "go_zyz", "structgo__zyz.html", "structgo__zyz" ],
    [ "hal_adcin_t", "structhal__adcin__t.html", "structhal__adcin__t" ],
    [ "hal_adcout_t", "structhal__adcout__t.html", "structhal__adcout__t" ],
    [ "hal_data_u", "unionhal__data__u.html", "unionhal__data__u" ],
    [ "hal_digin_t", "structhal__digin__t.html", "structhal__digin__t" ],
    [ "hal_digout_t", "structhal__digout__t.html", "structhal__digout__t" ],
    [ "hal_encoder_t", "structhal__encoder__t.html", "structhal__encoder__t" ],
    [ "hal_port_shm_t", "structhal__port__shm__t.html", "structhal__port__shm__t" ],
    [ "hal_stream_data", "unionhal__stream__data.html", "unionhal__stream__data" ],
    [ "hal_stream_t", "structhal__stream__t.html", "structhal__stream__t" ],
    [ "hid_device_", "structhid__device__.html", "structhid__device__" ],
    [ "hid_device_info", "structhid__device__info.html", "structhid__device__info" ],
    [ "home_local_data", "structhome__local__data.html", "structhome__local__data" ],
    [ "home_state_t", "classhome__state__t.html", null ],
    [ "ieee754_double", "unionieee754__double.html", "unionieee754__double" ],
    [ "IniFile", "classIniFile.html", null ],
    [ "inihal_base", "structinihal__base.html", null ],
    [ "input_report", "structinput__report.html", "structinput__report" ],
    [ "InterpBase", "classInterpBase.html", "classInterpBase" ],
    [ "JointConfig_t", "structJointConfig__t.html", "structJointConfig__t" ],
    [ "kinematics_parms", "structkinematics__parms.html", "structkinematics__parms" ],
    [ "lang_map_entry", "structlang__map__entry.html", "structlang__map__entry" ],
    [ "LinkedList", "classLinkedList.html", "classLinkedList" ],
    [ "LinkedListNode", "classLinkedListNode.html", "classLinkedListNode" ],
    [ "LOCMEM", "classLOCMEM.html", "classLOCMEM" ],
    [ "mailbox_entry_t", "structmailbox__entry__t.html", "structmailbox__entry__t" ],
    [ "mem_access_object", "structmem__access__object.html", "structmem__access__object" ],
    [ "NATIVE", "structNATIVE.html", null ],
    [ "NATIVE< hal_bit_t >", "structNATIVE_3_01hal__bit__t_01_4.html", "structNATIVE_3_01hal__bit__t_01_4" ],
    [ "NATIVE< hal_float_t >", "structNATIVE_3_01hal__float__t_01_4.html", "structNATIVE_3_01hal__float__t_01_4" ],
    [ "NATIVE< hal_s32_t >", "structNATIVE_3_01hal__s32__t_01_4.html", "structNATIVE_3_01hal__s32__t_01_4" ],
    [ "NATIVE< hal_u32_t >", "structNATIVE_3_01hal__u32__t_01_4.html", "structNATIVE_3_01hal__u32__t_01_4" ],
    [ "NML", "classNML.html", "classNML" ],
    [ "NML_DIAGNOSTICS_INFO", "classNML__DIAGNOSTICS__INFO.html", "classNML__DIAGNOSTICS__INFO" ],
    [ "NML_DISPLAY", "classNML__DISPLAY.html", "classNML__DISPLAY" ],
    [ "NML_ERROR", "classNML__ERROR.html", "classNML__ERROR" ],
    [ "NML_INTERP_LIST", "classNML__INTERP__LIST.html", "classNML__INTERP__LIST" ],
    [ "NML_INTERP_LIST_NODE", "structNML__INTERP__LIST__NODE.html", "structNML__INTERP__LIST__NODE" ],
    [ "NML_MODULE", "classNML__MODULE.html", "classNML__MODULE" ],
    [ "NML_SERVER", "classNML__SERVER.html", "classNML__SERVER" ],
    [ "NML_SERVER_LOCAL_PORT", "classNML__SERVER__LOCAL__PORT.html", "classNML__SERVER__LOCAL__PORT" ],
    [ "NML_SUBORDINATE_STRUCT", "structNML__SUBORDINATE__STRUCT.html", "structNML__SUBORDINATE__STRUCT" ],
    [ "NML_SUPER_SERVER", "classNML__SUPER__SERVER.html", "classNML__SUPER__SERVER" ],
    [ "NML_TEXT", "classNML__TEXT.html", "classNML__TEXT" ],
    [ "NMLmsg", "classNMLmsg.html", "classNMLmsg" ],
    [ "nocase_cmp", "structnocase__cmp.html", "structnocase__cmp" ],
    [ "offset_struct", "structoffset__struct.html", "structoffset__struct" ],
    [ "one_adcin_data_t", "structone__adcin__data__t.html", "structone__adcin__data__t" ],
    [ "one_adcout_data_t", "structone__adcout__data__t.html", "structone__adcout__data__t" ],
    [ "one_digiIO_data_t", "structone__digiIO__data__t.html", "structone__digiIO__data__t" ],
    [ "one_encoder_data_t", "structone__encoder__data__t.html", "structone__encoder__data__t" ],
    [ "one_joint_home_data_t", "structone__joint__home__data__t.html", "structone__joint__home__data__t" ],
    [ "one_kbd48CNCButton_data_t", "structone__kbd48CNCButton__data__t.html", "structone__kbd48CNCButton__data__t" ],
    [ "one_PoExtBus_data_t", "structone__PoExtBus__data__t.html", "structone__PoExtBus__data__t" ],
    [ "one_PoNET_data_t", "structone__PoNET__data__t.html", "structone__PoNET__data__t" ],
    [ "one_sequence_home_data_t", "structone__sequence__home__data__t.html", "structone__sequence__home__data__t" ],
    [ "parameter_value_struct", "structparameter__value__struct.html", "structparameter__value__struct" ],
    [ "PEv2_data_t", "structPEv2__data__t.html", "structPEv2__data__t" ],
    [ "PHANTOMMEM", "classPHANTOMMEM.html", "classPHANTOMMEM" ],
    [ "PHYSMEM_HANDLE", "classPHYSMEM__HANDLE.html", "classPHYSMEM__HANDLE" ],
    [ "PK_MatrixKB_Parameters", "structPK__MatrixKB__Parameters.html", "structPK__MatrixKB__Parameters" ],
    [ "PKEncoderCfgAsyncContext", "structPKEncoderCfgAsyncContext.html", "structPKEncoderCfgAsyncContext" ],
    [ "PKUSBEnumerator", "structPKUSBEnumerator.html", "structPKUSBEnumerator" ],
    [ "PLANE_POINT", "structPLANE__POINT.html", "structPLANE__POINT" ],
    [ "PmCartesian", "structPmCartesian.html", "structPmCartesian" ],
    [ "PmCartLine", "structPmCartLine.html", "structPmCartLine" ],
    [ "PmCircle", "structPmCircle.html", "structPmCircle" ],
    [ "PmCircle9", "structPmCircle9.html", "structPmCircle9" ],
    [ "PmCircleLimits", "structPmCircleLimits.html", "structPmCircleLimits" ],
    [ "PmCylindrical", "structPmCylindrical.html", "structPmCylindrical" ],
    [ "PmEulerZyx", "structPmEulerZyx.html", "structPmEulerZyx" ],
    [ "PmEulerZyz", "structPmEulerZyz.html", "structPmEulerZyz" ],
    [ "PmHomogeneous", "structPmHomogeneous.html", "structPmHomogeneous" ],
    [ "PmLine", "structPmLine.html", "structPmLine" ],
    [ "PmLine9", "structPmLine9.html", "structPmLine9" ],
    [ "PmPose", "structPmPose.html", "structPmPose" ],
    [ "PmQuaternion", "structPmQuaternion.html", "structPmQuaternion" ],
    [ "PmRigidTap", "structPmRigidTap.html", "structPmRigidTap" ],
    [ "PmRotationMatrix", "structPmRotationMatrix.html", "structPmRotationMatrix" ],
    [ "PmRotationVector", "structPmRotationVector.html", "structPmRotationVector" ],
    [ "PmRpy", "structPmRpy.html", "structPmRpy" ],
    [ "PmSpherical", "structPmSpherical.html", "structPmSpherical" ],
    [ "PoKeysDiscoveryContext", "structPoKeysDiscoveryContext.html", "structPoKeysDiscoveryContext" ],
    [ "PoKeysHALComponent", "structPoKeysHALComponent.html", "structPoKeysHALComponent" ],
    [ "pthread_barrier", "structpthread__barrier.html", "structpthread__barrier" ],
    [ "PTR", "structPTR.html", "structPTR" ],
    [ "pycontext", "structpycontext.html", "structpycontext" ],
    [ "RCS_CMD_CHANNEL", "classRCS__CMD__CHANNEL.html", "classRCS__CMD__CHANNEL" ],
    [ "RCS_CMD_MSG", "classRCS__CMD__MSG.html", "classRCS__CMD__MSG" ],
    [ "RCS_GENERIC_CMD", "classRCS__GENERIC__CMD.html", "classRCS__GENERIC__CMD" ],
    [ "RCS_GENERIC_STATUS", "classRCS__GENERIC__STATUS.html", "classRCS__GENERIC__STATUS" ],
    [ "RCS_SEMAPHORE", "classRCS__SEMAPHORE.html", "classRCS__SEMAPHORE" ],
    [ "RCS_SHAREDMEM", "classRCS__SHAREDMEM.html", "classRCS__SHAREDMEM" ],
    [ "RCS_STAT_CHANNEL", "classRCS__STAT__CHANNEL.html", "classRCS__STAT__CHANNEL" ],
    [ "RCS_STAT_MSG", "classRCS__STAT__MSG.html", "classRCS__STAT__MSG" ],
    [ "RCS_TIMER", "classRCS__TIMER.html", "classRCS__TIMER" ],
    [ "remap_struct", "structremap__struct.html", "structremap__struct" ],
    [ "REMOTE_BLOCKING_READ_REPLY", "structREMOTE__BLOCKING__READ__REPLY.html", null ],
    [ "REMOTE_BLOCKING_READ_REQUEST", "structREMOTE__BLOCKING__READ__REQUEST.html", "structREMOTE__BLOCKING__READ__REQUEST" ],
    [ "REMOTE_CANCEL_SUBSCRIPTION_REPLY", "structREMOTE__CANCEL__SUBSCRIPTION__REPLY.html", "structREMOTE__CANCEL__SUBSCRIPTION__REPLY" ],
    [ "REMOTE_CANCEL_SUBSCRIPTION_REQUEST", "structREMOTE__CANCEL__SUBSCRIPTION__REQUEST.html", "structREMOTE__CANCEL__SUBSCRIPTION__REQUEST" ],
    [ "REMOTE_CHECK_IF_READ_REPLY", "structREMOTE__CHECK__IF__READ__REPLY.html", "structREMOTE__CHECK__IF__READ__REPLY" ],
    [ "REMOTE_CHECK_IF_READ_REQUEST", "structREMOTE__CHECK__IF__READ__REQUEST.html", "structREMOTE__CHECK__IF__READ__REQUEST" ],
    [ "REMOTE_CLEAR_REPLY", "structREMOTE__CLEAR__REPLY.html", null ],
    [ "REMOTE_CLEAR_REQUEST", "structREMOTE__CLEAR__REQUEST.html", "structREMOTE__CLEAR__REQUEST" ],
    [ "REMOTE_CLOSE_CHANNEL_REPLY", "structREMOTE__CLOSE__CHANNEL__REPLY.html", null ],
    [ "REMOTE_CLOSE_CHANNEL_REQUEST", "structREMOTE__CLOSE__CHANNEL__REQUEST.html", "structREMOTE__CLOSE__CHANNEL__REQUEST" ],
    [ "REMOTE_CMS_MESSAGE", "structREMOTE__CMS__MESSAGE.html", null ],
    [ "REMOTE_CMS_REPLY", "structREMOTE__CMS__REPLY.html", "structREMOTE__CMS__REPLY" ],
    [ "REMOTE_CMS_REQUEST", "structREMOTE__CMS__REQUEST.html", "structREMOTE__CMS__REQUEST" ],
    [ "REMOTE_GET_BUF_NAME_REPLY", "structREMOTE__GET__BUF__NAME__REPLY.html", "structREMOTE__GET__BUF__NAME__REPLY" ],
    [ "REMOTE_GET_BUF_NAME_REQUEST", "structREMOTE__GET__BUF__NAME__REQUEST.html", "structREMOTE__GET__BUF__NAME__REQUEST" ],
    [ "REMOTE_GET_DIAG_INFO_REPLY", "structREMOTE__GET__DIAG__INFO__REPLY.html", "structREMOTE__GET__DIAG__INFO__REPLY" ],
    [ "REMOTE_GET_DIAG_INFO_REQUEST", "structREMOTE__GET__DIAG__INFO__REQUEST.html", "structREMOTE__GET__DIAG__INFO__REQUEST" ],
    [ "REMOTE_GET_KEYS_REPLY", "structREMOTE__GET__KEYS__REPLY.html", "structREMOTE__GET__KEYS__REPLY" ],
    [ "REMOTE_GET_KEYS_REQUEST", "structREMOTE__GET__KEYS__REQUEST.html", "structREMOTE__GET__KEYS__REQUEST" ],
    [ "REMOTE_GET_MSG_COUNT_REPLY", "structREMOTE__GET__MSG__COUNT__REPLY.html", "structREMOTE__GET__MSG__COUNT__REPLY" ],
    [ "REMOTE_GET_MSG_COUNT_REQUEST", "structREMOTE__GET__MSG__COUNT__REQUEST.html", "structREMOTE__GET__MSG__COUNT__REQUEST" ],
    [ "REMOTE_GET_QUEUE_LENGTH_REPLY", "structREMOTE__GET__QUEUE__LENGTH__REPLY.html", "structREMOTE__GET__QUEUE__LENGTH__REPLY" ],
    [ "REMOTE_GET_QUEUE_LENGTH_REQUEST", "structREMOTE__GET__QUEUE__LENGTH__REQUEST.html", "structREMOTE__GET__QUEUE__LENGTH__REQUEST" ],
    [ "REMOTE_GET_SPACE_AVAILABLE_REPLY", "structREMOTE__GET__SPACE__AVAILABLE__REPLY.html", "structREMOTE__GET__SPACE__AVAILABLE__REPLY" ],
    [ "REMOTE_GET_SPACE_AVAILABLE_REQUEST", "structREMOTE__GET__SPACE__AVAILABLE__REQUEST.html", "structREMOTE__GET__SPACE__AVAILABLE__REQUEST" ],
    [ "REMOTE_LOGIN_REPLY", "structREMOTE__LOGIN__REPLY.html", "structREMOTE__LOGIN__REPLY" ],
    [ "REMOTE_LOGIN_REQUEST", "structREMOTE__LOGIN__REQUEST.html", "structREMOTE__LOGIN__REQUEST" ],
    [ "REMOTE_READ_REPLY", "structREMOTE__READ__REPLY.html", "structREMOTE__READ__REPLY" ],
    [ "REMOTE_READ_REQUEST", "structREMOTE__READ__REQUEST.html", "structREMOTE__READ__REQUEST" ],
    [ "REMOTE_SET_DIAG_INFO_REPLY", "structREMOTE__SET__DIAG__INFO__REPLY.html", null ],
    [ "REMOTE_SET_DIAG_INFO_REQUEST", "structREMOTE__SET__DIAG__INFO__REQUEST.html", "structREMOTE__SET__DIAG__INFO__REQUEST" ],
    [ "REMOTE_SET_SUBSCRIPTION_REPLY", "structREMOTE__SET__SUBSCRIPTION__REPLY.html", "structREMOTE__SET__SUBSCRIPTION__REPLY" ],
    [ "REMOTE_SET_SUBSCRIPTION_REQUEST", "structREMOTE__SET__SUBSCRIPTION__REQUEST.html", "structREMOTE__SET__SUBSCRIPTION__REQUEST" ],
    [ "REMOTE_WRITE_REPLY", "structREMOTE__WRITE__REPLY.html", "structREMOTE__WRITE__REPLY" ],
    [ "REMOTE_WRITE_REQUEST", "structREMOTE__WRITE__REQUEST.html", "structREMOTE__WRITE__REQUEST" ],
    [ "rtapi_device", "structrtapi__device.html", "structrtapi__device" ],
    [ "rtapi_firmware", "structrtapi__firmware.html", "structrtapi__firmware" ],
    [ "rtapi_list_head", "structrtapi__list__head.html", "structrtapi__list__head" ],
    [ "rtapi_parport_t", "structrtapi__parport__t.html", "structrtapi__parport__t" ],
    [ "rtapi_pci_dev", "structrtapi__pci__dev.html", "structrtapi__pci__dev" ],
    [ "rtapi_pci_device_id", "structrtapi__pci__device__id.html", "structrtapi__pci__device__id" ],
    [ "rtapi_pci_driver", "structrtapi__pci__driver.html", "structrtapi__pci__driver" ],
    [ "rtapi_pci_resource", "structrtapi__pci__resource.html", "structrtapi__pci__resource" ],
    [ "scoped_locale", "structscoped__locale.html", "structscoped__locale" ],
    [ "setup", "structsetup.html", "structsetup" ],
    [ "shm_t", "structshm__t.html", "structshm__t" ],
    [ "SHMEM", "classSHMEM.html", "classSHMEM" ],
    [ "simple_tp_t", "structsimple__tp__t.html", "structsimple__tp__t" ],
    [ "sMatrixKeyboard", "structsMatrixKeyboard.html", "structsMatrixKeyboard" ],
    [ "SphericalArc", "structSphericalArc.html", "structSphericalArc" ],
    [ "spindle_status_t", "structspindle__status__t.html", "structspindle__status__t" ],
    [ "SpindleConfig_t", "structSpindleConfig__t.html", "structSpindleConfig__t" ],
    [ "SpiralArcLengthFit", "structSpiralArcLengthFit.html", "structSpiralArcLengthFit" ],
    [ "sPoILinfo", "structsPoILinfo.html", "structsPoILinfo" ],
    [ "sPoILmemoryChunk", "structsPoILmemoryChunk.html", "structsPoILmemoryChunk" ],
    [ "sPoILStack", "structsPoILStack.html", "structsPoILStack" ],
    [ "sPoILStatus", "structsPoILStatus.html", "structsPoILStatus" ],
    [ "sPoILTask", "structsPoILTask.html", "structsPoILTask" ],
    [ "sPoKeys57Industrial", "structsPoKeys57Industrial.html", "structsPoKeys57Industrial" ],
    [ "sPoKeys_DeviceDescriptor", "structsPoKeys__DeviceDescriptor.html", "structsPoKeys__DeviceDescriptor" ],
    [ "sPoKeys_PinCapabilities", "structsPoKeys__PinCapabilities.html", "structsPoKeys__PinCapabilities" ],
    [ "sPoKeys_PinDescriptor", "structsPoKeys__PinDescriptor.html", "structsPoKeys__PinDescriptor" ],
    [ "sPoKeysCANmsg", "structsPoKeysCANmsg.html", "structsPoKeysCANmsg" ],
    [ "sPoKeysCustomSensorUnit", "structsPoKeysCustomSensorUnit.html", "structsPoKeysCustomSensorUnit" ],
    [ "sPoKeysDevice", "structsPoKeysDevice.html", "structsPoKeysDevice" ],
    [ "sPoKeysDevice_Data", "structsPoKeysDevice__Data.html", "structsPoKeysDevice__Data" ],
    [ "sPoKeysDevice_Info", "structsPoKeysDevice__Info.html", "structsPoKeysDevice__Info" ],
    [ "sPoKeysEasySensor", "structsPoKeysEasySensor.html", "structsPoKeysEasySensor" ],
    [ "sPoKeysEncoder", "structsPoKeysEncoder.html", "structsPoKeysEncoder" ],
    [ "sPoKeysFailsafeSettings", "structsPoKeysFailsafeSettings.html", "structsPoKeysFailsafeSettings" ],
    [ "sPoKeysLCD", "structsPoKeysLCD.html", "structsPoKeysLCD" ],
    [ "sPoKeysMatrixLED", "structsPoKeysMatrixLED.html", "structsPoKeysMatrixLED" ],
    [ "sPoKeysNetworkDeviceInfo", "structsPoKeysNetworkDeviceInfo.html", "structsPoKeysNetworkDeviceInfo" ],
    [ "sPoKeysNetworkDeviceSummary", "structsPoKeysNetworkDeviceSummary.html", "structsPoKeysNetworkDeviceSummary" ],
    [ "sPoKeysOtherPeripherals", "structsPoKeysOtherPeripherals.html", "structsPoKeysOtherPeripherals" ],
    [ "sPoKeysPEv2", "structsPoKeysPEv2.html", "structsPoKeysPEv2" ],
    [ "sPoKeysPEv2info", "structsPoKeysPEv2info.html", "structsPoKeysPEv2info" ],
    [ "sPoKeysPinData", "structsPoKeysPinData.html", "structsPoKeysPinData" ],
    [ "sPoKeysPoStepInterface", "structsPoKeysPoStepInterface.html", "structsPoKeysPoStepInterface" ],
    [ "sPoKeysPWM", "structsPoKeysPWM.html", "structsPoKeysPWM" ],
    [ "sPoKeysRTC", "structsPoKeysRTC.html", "structsPoKeysRTC" ],
    [ "sPoNETmodule", "structsPoNETmodule.html", "structsPoNETmodule" ],
    [ "sPoPoStepDriverConfig", "structsPoPoStepDriverConfig.html", "structsPoPoStepDriverConfig" ],
    [ "StandaloneInterpInternals", "structStandaloneInterpInternals.html", "structStandaloneInterpInternals" ],
    [ "state_tag_t", "structstate__tag__t.html", "structstate__tag__t" ],
    [ "StateTag", "structStateTag.html", "structStateTag" ],
    [ "syncdio_t", "structsyncdio__t.html", "structsyncdio__t" ],
    [ "TC_QUEUE_STRUCT", "structTC__QUEUE__STRUCT.html", "structTC__QUEUE__STRUCT" ],
    [ "TC_STRUCT", "structTC__STRUCT.html", "structTC__STRUCT" ],
    [ "TCP_BUFFER_SUBSCRIPTION_INFO", "classTCP__BUFFER__SUBSCRIPTION__INFO.html", "classTCP__BUFFER__SUBSCRIPTION__INFO" ],
    [ "TCP_CLIENT_SUBSCRIPTION_INFO", "classTCP__CLIENT__SUBSCRIPTION__INFO.html", "classTCP__CLIENT__SUBSCRIPTION__INFO" ],
    [ "TCPMEM", "classTCPMEM.html", "classTCPMEM" ],
    [ "TCPSVR_BLOCKING_READ_REQUEST", "classTCPSVR__BLOCKING__READ__REQUEST.html", "classTCPSVR__BLOCKING__READ__REQUEST" ],
    [ "tp_spindle_t", "structtp__spindle__t.html", "structtp__spindle__t" ],
    [ "TP_STRUCT", "structTP__STRUCT.html", "structTP__STRUCT" ],
    [ "TrajConfig_t", "structTrajConfig__t.html", "structTrajConfig__t" ],
    [ "VALUE", "structVALUE.html", "structVALUE" ]
];