# Erstellt von PNCconf am Thu Mar 31 22:11:13 2022
# Using LinuxCNC version:  2.8
# Änderungen an dieser Datei werden beim nächsten
# overwritten when you run PNCconf again

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadusr pokeys
show pin
show parameter
#loadrt pid names=pid.x,pid.x2,pid.y,pid.z,pid.s
loadrt pid names=pid.s
show pin
show parameter
loadusr -W xhc-whb04b-6 -HsfB
show pin
show parameter

addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
#addf pid.x.do-pid-calcs       servo-thread
#addf pid.x2.do-pid-calcs       servo-thread
#addf pid.y.do-pid-calcs       servo-thread
#addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
show pin
show parameter

show pin
show parameter
show pin
show parameter
show pin
show parameter
show pin
show parameter
show pin
show parameter
show pin
show parameter
show pin
show parameter
show pin
show parameter
show pin
show parameter

# external output signals
#net estop-out     => pokeys.0.PEv2.digout.Emergency.out
net machine-is-on => pokeys.0.machine-is-on
# external input signals

# --- MIN X---
net min-x2     <=  pokeys.0.PEv2.6.digin.LimitN.in
net min-x     <=  pokeys.0.PEv2.0.digin.LimitN.in

# --- MAX-X ---
net max-x     <=  pokeys.0.PEv2.0.digin.LimitP.in
net max-x2     <=  pokeys.0.PEv2.6.digin.LimitP.in

# --- HOME-X2 ---
net home-x     <=  pokeys.0.PEv2.0.digin.Home.in
net home-x2     <=  pokeys.0.PEv2.6.digin.Home.in

net min-y     <=  pokeys.0.PEv2.1.digin.LimitN.in
net max-y     <=  pokeys.0.PEv2.1.digin.LimitP.in
net home-y     <=  pokeys.0.PEv2.1.digin.Home.in

net min-z     <=  pokeys.0.PEv2.2.digin.LimitN.in
net max-z     <=  pokeys.0.PEv2.2.digin.LimitP.in
net home-z     <=  pokeys.0.PEv2.2.digin.Home.in

# --- CYCLE-START ---
#net cycle-start     <=  [HMOT](CARD0).gpio.023.in

# --- ABORT ---
#net abort     <=  [HMOT](CARD0).gpio.024.in

# --- ESTOP-EXT ---
net estop-ext     <=  pokeys.0.PEv2.digin.Emergency.in
#setp pokeys.0.pokeys.0.PEv2.digin.Emergency.invert 1
#

# --- JOG-X-POS ---
#net jog-x-pos     <=  [HMOT](CARD0).gpio.026.in

# --- JOG-X-NEG ---
#net jog-x-neg     <=  [HMOT](CARD0).gpio.027.in

# --- MIN-HOME-X ---
#net min-home-x     <=  [HMOT](CARD0).gpio.028.in


#*******************
#  AXIS X JOINT 0
#*******************

#setp   pid.x.Pgain     [JOINT_0]P
#setp   pid.x.Igain     [JOINT_0]I
#setp   pid.x.Dgain     [JOINT_0]D
#setp   pid.x.bias      [JOINT_0]BIAS
#setp   pid.x.FF0       [JOINT_0]FF0
#setp   pid.x.FF1       [JOINT_0]FF1
#setp   pid.x.FF2       [JOINT_0]FF2
#setp   pid.x.deadband  [JOINT_0]DEADBAND
#setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
#setp   pid.x.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
#setp   pid.x.maxerror 0.012700

#net x-index-enable  <=> pid.x.index-enable
#net x-enable        =>  pid.x.enable
#net x-pos-cmd       =>  pid.x.command
#net x-pos-fb        =>  pid.x.feedback
#net x-output        <=  pid.x.output


# Step Gen signals/setup
setp   pokeys.0.PEv2.0.stepgen.STEP-SCALE  	   [JOINT_0]STEP_SCALE
setp   pokeys.0.PEv2.0.stepgen.MIN-LIMIT  	   [JOINT_0]MIN_LIMIT
setp   pokeys.0.PEv2.0.stepgen.MAX-LIMIT  	   [JOINT_0]MAX_LIMIT
setp   pokeys.0.PEv2.0.stepgen.HOME-OFFSET  	   [JOINT_0]HOME_OFFSET
setp   pokeys.0.PEv2.0.stepgen.HOME-SEARCH-VEL  	   [JOINT_0]HOME_SEARCH_VEL
setp   pokeys.0.PEv2.0.stepgen.HOME-LATCH-VEL  	   [JOINT_0]HOME_LATCH_VEL
setp   pokeys.0.PEv2.0.stepgen.STEPGEN-MAXVEL         [JOINT_0]STEPGEN_MAXACCEL
setp   pokeys.0.PEv2.0.stepgen.STEPGEN-MAXACCEL           [JOINT_0]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-pos-cmd     =>  pokeys.0.PEv2.0.joint-pos-cmd

net x-vel-cmd    <= joint.0.vel-cmd
net x-vel-cmd     =>  pokeys.0.PEv2.0.joint-vel-cmd

net x-pos-fb     <= pokeys.0.PEv2.0.joint-pos-fb
net x-pos-fb     => joint.0.motor-pos-fb

net x-enable     <= joint.0.amp-enable-out
net x-enable     => pokeys.0.PEv2.0.digout.AxisEnable.out


net x-homing     <= joint.0.homing
net x-homing     => pokeys.0.PEv2.0.joint-in-homing

net x-in-position     <= joint.0.in-position
net x-in-position     => pokeys.0.PEv2.0.joint-in-position

# ---Encoder feedback signals/setup---

#setp    pokeys.0.PEv2.0.stepgen.ENCODER-SCALE  [JOINT_0]ENCODER_SCALE

net x-pos-fb               <=  pokeys.0.PEv2.0.joint-pos-fb
net x-pos-fb               =>  joint.0.motor-pos-fb


# ---setup home / limit switch signals---

net min-home-x     =>  joint.0.home-sw-in
net min-home-x     =>  joint.0.neg-lim-sw-in
net max-x     =>  joint.0.pos-lim-sw-in

#*******************
#  Tandem AXIS X2 JOINT 1
#*******************

#setp   pid.x2.Pgain     [JOINT_1]P
#setp   pid.x2.Igain     [JOINT_1]I
#setp   pid.x2.Dgain     [JOINT_1]D
#setp   pid.x2.bias      [JOINT_1]BIAS
#setp   pid.x2.FF0       [JOINT_1]FF0
#setp   pid.x2.FF1       [JOINT_1]FF1
#setp   pid.x2.FF2       [JOINT_1]FF2
#setp   pid.x2.deadband  [JOINT_1]DEADBAND
#setp   pid.x2.maxoutput [JOINT_1]MAX_OUTPUT
#setp   pid.x2.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
#setp   pid.x2.maxerror 0.012700

#net x2-index-enable  <=> pid.x2.index-enable
#net x2-enable        =>  pid.x2.enable
#net x2-pos-cmd       =>  pid.x2.command
#net x2-pos-fb        =>  pid.x2.feedback
#net x2-output        <=  pid.x2.output

# Step Gen signals/setup for tandem axis
setp   pokeys.0.PEv2.6.stepgen.STEP-SCALE  	   [JOINT_1]STEP_SCALE
setp   pokeys.0.PEv2.6.stepgen.MIN-LIMIT  	   [JOINT_1]MIN_LIMIT
setp   pokeys.0.PEv2.6.stepgen.MAX-LIMIT  	   [JOINT_1]MAX_LIMIT
setp   pokeys.0.PEv2.6.stepgen.HOME-OFFSET  	   [JOINT_1]HOME_OFFSET
setp   pokeys.0.PEv2.6.stepgen.HOME-SEARCH-VEL  	   [JOINT_1]HOME_SEARCH_VEL
setp   pokeys.0.PEv2.6.stepgen.HOME-LATCH-VEL  	   [JOINT_1]HOME_LATCH_VEL
setp   pokeys.0.PEv2.6.stepgen.STEPGEN-MAXVEL         [JOINT_1]STEPGEN_MAXACCEL
setp   pokeys.0.PEv2.6.stepgen.STEPGEN-MAXACCEL           [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net x2-pos-cmd    <= joint.1.motor-pos-cmd
net x2-pos-cmd       =>  pokeys.0.PEv2.6.joint-pos-cmd

net x2-vel-cmd    <= joint.1.vel-cmd
net x2-vel-cmd     =>  pokeys.0.PEv2.6.joint-vel-cmd

net x2-pos-fb     <= pokeys.0.PEv2.6.joint-pos-fb
net x2-pos-fb     => joint.1.motor-pos-fb

net x2-enable     <= joint.1.amp-enable-out
net x2-enable     => pokeys.0.PEv2.6.digout.AxisEnable.out

net x2-homing     <= joint.1.homing
net x2-homing     => pokeys.0.PEv2.6.joint-in-homing

net x2-in-position     <= joint.1.in-position
net x2-in-position     => pokeys.0.PEv2.6.joint-in-position

# ---Encoder feedback signals/setup---

#setp    pokeys.0.PEv2.6.stepgen.ENCODER-SCALE  [JOINT_1]ENCODER_SCALE

net x2-pos-fb               <=  pokeys.0.PEv2.6.joint-pos-fb
net x2-pos-fb               =>  joint.1.motor-pos-fb

# ---setup home / limit switch signals---

net home-x2     =>  joint.1.home-sw-in
net min-x2     =>  joint.1.neg-lim-sw-in
net max-x2     =>  joint.1.pos-lim-sw-in

#*******************
#  AXIS Y JOINT 2
#*******************

#setp   pid.y.Pgain     [JOINT_2]P
#setp   pid.y.Igain     [JOINT_2]I
#setp   pid.y.Dgain     [JOINT_2]D
#setp   pid.y.bias      [JOINT_2]BIAS
#setp   pid.y.FF0       [JOINT_2]FF0
#setp   pid.y.FF1       [JOINT_2]FF1
#setp   pid.y.FF2       [JOINT_2]FF2
#setp   pid.y.deadband  [JOINT_2]DEADBAND
#setp   pid.y.maxoutput [JOINT_2]MAX_OUTPUT
#setp   pid.y.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
#setp   pid.y.maxerror 0.012700

#net y-index-enable  <=> pid.y.index-enable
#net y-enable        =>  pid.y.enable
#net y-pos-cmd       =>  pid.y.command
#net y-pos-fb        =>  pid.y.feedback
#net y-output        <=  pid.y.output

# Step Gen signals/setup
setp   pokeys.0.PEv2.1.stepgen.STEP-SCALE  	   [JOINT_2]STEP_SCALE
setp   pokeys.0.PEv2.1.stepgen.MIN-LIMIT  	   [JOINT_2]MIN_LIMIT
setp   pokeys.0.PEv2.1.stepgen.MAX-LIMIT  	   [JOINT_2]MAX_LIMIT
setp   pokeys.0.PEv2.1.stepgen.HOME-OFFSET  	   [JOINT_2]HOME_OFFSET
setp   pokeys.0.PEv2.1.stepgen.HOME-SEARCH-VEL  	   [JOINT_2]HOME_SEARCH_VEL
setp   pokeys.0.PEv2.1.stepgen.HOME-LATCH-VEL  	   [JOINT_2]HOME_LATCH_VEL
setp   pokeys.0.PEv2.1.stepgen.STEPGEN-MAXVEL        [JOINT_2]STEPGEN_MAXACCEL
setp   pokeys.0.PEv2.1.stepgen.STEPGEN-MAXACCEL           [JOINT_2]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net y-pos-cmd    <= joint.2.motor-pos-cmd
net y-pos-cmd       =>  pokeys.0.PEv2.1.joint-pos-cmd

net y-vel-cmd    <= joint.2.vel-cmd

#if no pid is used
net y-vel-cmd     =>  pokeys.0.PEv2.1.joint-vel-cmd

# if PID is used
#net y-output     =>  pokeys.0.PEv2.1.joint-vel-cmd

net y-pos-fb     <= pokeys.0.PEv2.1.joint-pos-fb
net y-pos-fb     => joint.2.motor-pos-fb

net y-enable     <= joint.2.amp-enable-out
net y-enable     => pokeys.0.PEv2.1.digout.AxisEnable.out

net y-homing     <= joint.2.homing
net y-homing     => pokeys.0.PEv2.1.joint-in-homing

net y-in-position     <= joint.2.in-position
net y-in-position     => pokeys.0.PEv2.1.joint-in-position

# ---setup home / limit switch signals---

net y-home-sw     =>  joint.2.home-sw-in
net y-neg-limit     =>  joint.2.neg-lim-sw-in
net y-pos-limit     =>  joint.2.pos-lim-sw-in

#*******************
#  AXIS Z JOINT 3
#*******************

#setp   pid.z.Pgain     [JOINT_3]P
#setp   pid.z.Igain     [JOINT_3]I
#setp   pid.z.Dgain     [JOINT_3]D
#setp   pid.z.bias      [JOINT_3]BIAS
#setp   pid.z.FF0       [JOINT_3]FF0
#setp   pid.z.FF1       [JOINT_3]FF1
#setp   pid.z.FF2       [JOINT_3]FF2
#setp   pid.z.deadband  [JOINT_3]DEADBAND
#setp   pid.z.maxoutput [JOINT_3]MAX_OUTPUT
#setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
#setp   pid.z.maxerror 0.012700

#net z-index-enable  <=> pid.z.index-enable
#net z-enable        =>  pid.z.enable
#net z-pos-cmd       =>  pid.z.command
#net z-pos-fb        =>  pid.z.feedback
#net z-output        <=  pid.z.output

# Step Gen signals/setup
setp   pokeys.0.PEv2.2.stepgen.STEP-SCALE  	   [JOINT_3]STEP_SCALE
setp   pokeys.0.PEv2.2.stepgen.MIN-LIMIT  	   [JOINT_3]MIN_LIMIT
setp   pokeys.0.PEv2.2.stepgen.MAX-LIMIT 	   [JOINT_3]MAX_LIMIT
setp   pokeys.0.PEv2.2.stepgen.HOME-OFFSET  	   [JOINT_3]HOME_OFFSET
setp   pokeys.0.PEv2.2.stepgen.HOME-SEARCH-VEL  	   [JOINT_3]HOME_SEARCH_VEL
setp   pokeys.0.PEv2.2.stepgen.HOME-LATCH-VEL  	   [JOINT_3]HOME_LATCH_VEL
setp   pokeys.0.PEv2.2.stepgen.STEPGEN-MAXVEL         [JOINT_3]STEPGEN_MAXACCEL
setp   pokeys.0.PEv2.2.stepgen.STEPGEN-MAXACCEL           [JOINT_3]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.3.motor-pos-cmd
net z-pos-cmd    =>  pokeys.0.PEv2.2.joint-pos-cmd

net z-vel-cmd    <= joint.3.vel-cmd
net z-vel-cmd     =>  pokeys.0.PEv2.2.joint-vel-cmd

net z-pos-fb     <= pokeys.0.PEv2.2.joint-pos-fb
net z-pos-fb     => joint.3.motor-pos-fb

net z-enable     <= joint.3.amp-enable-out
net z-enable     => pokeys.0.PEv2.2.digout.AxisEnable.out

net z-homing     <= joint.3.homing
net z-homing     => pokeys.0.PEv2.2.joint-in-homing

net z-in-position     <= joint.3.in-position
net z-in-position     => pokeys.0.PEv2.2.joint-in-position

# ---setup home / limit switch signals---

net z-home-sw     =>  joint.3.home-sw-in
net z-neg-limit     =>  joint.3.neg-lim-sw-in
net z-pos-limit     =>  joint.3.pos-lim-sw-in

#*******************
#  SPINDLE
#*******************

setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true

setp   pokeys.0.adcout.pwm.period	2500

net spindle-index-enable  <=> pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable

# ---Setup spindle at speed signals---
sets spindle-at-speed true

# ---Setup spindle DAC ---
loadrt scale count=1
addf scale.0 servo-thread
setp scale.0.gain 0.002

# direct mapping without PID
net spindle-vel-cmd-rpm spindle.0.speed-out => scale.0.in
#if PID should be used
#net spindle-speed-scale spindle-output => scale.0.in
net spindle-speed-DAC scale.0.out => pokeys.0.adcout.0.value
net spindle-enable => pokeys.0.adcout.0.enable
net spindle-enable => pokeys.0.PEv2.digout.ExternalRelay-0.out

#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

#net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
#net axis-select-y  halui.axis.y.select
net jog-y-pos      halui.axis.y.plus
net jog-y-neg      halui.axis.y.minus
net jog-y-analog   halui.axis.y.analog
net y-is-homed     halui.joint.1.is-homed
#net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.2.is-homed
#net jog-selected-pos      halui.axis.selected.plus
#net jog-selected-neg      halui.axis.selected.minus
#net spindle-manual-cw     halui.spindle.0.forward
#net spindle-manual-ccw    halui.spindle.0.reverse
#net spindle-manual-stop   halui.spindle.0.stop
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---
#net probe-in     <=  pokeys.0.PEv2.ProbeInput
net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---pokeys.kbd48CNC / HAL_UI---
#FUN_CYCLE_START,
net pokeys.kbd48CNC.CYCLE_START.Button halui.program.run
net pokeys.kbd48CNC.CYCLE_START.LED halui.program.is-running



#FUN_FEED_HOLD,
net pokeys.kbd48CNC.FEED_HOLD.Button =>	halui.program.pause			
net pokeys.kbd48CNC.FEED_HOLD.LED =>		halui.program.is-paused

net pokeys.kbd48CNC.STOP.Button =>	halui.program.stop			
net pokeys.kbd48CNC.STOP.LED =>		halui.program.is-idle 

net pokeys.kbd48CNC.RESET.Button =>	halui.abort			
#net pokeys.kbd48CNC.RESET.LED =>

net pokeys.kbd48CNC.SINGLE_STEP.Button =>	halui.program.step		
#net pokeys.kbd48CNC.SINGLE_STEP.LED =>
#FUN_REVERSE,
#net pokeys.kbd48CNC.REVERSE.Button =>							
#net pokeys.kbd48CNC.REVERSE.LED =>
#FUN_OPTIONAL_STOP, 
net pokeys.kbd48CNC.OPTIONAL_STOP.Button =>	halui.program.optional-stop.on	
net pokeys.kbd48CNC.OPTIONAL_STOP.LED =>		halui.program.optional-stop.is-on
#FUN_EDIT,
#net pokeys.kbd48CNC.EDIT.Button =>					
#net pokeys.kbd48CNC.EDIT.LED =>
#FUN_LOAD,	
net pokeys.kbd48CNC.LOAD.Button =>	halui.machine.on			
#net pokeys.kbd48CNC.LOAD.LED =>		halui.machine.is-on
#FUN_CLOSE_GFILE,	
net pokeys.kbd48CNC.CLOSE_GFILE.Button =>	halui.machine.off 	
#net pokeys.kbd48CNC.CLOSE_GFILE.LED =>
#FUN_RECENT,
#net pokeys.kbd48CNC.RECENT.Button =>							
#net pokeys.kbd48CNC.RECENT.LED =>
#FUN_SET_NEXT_LINE,
#net pokeys.kbd48CNC.SET_NEXT_LINE.Button =>					
#net pokeys.kbd48CNC.SET_NEXT_LINE.LED =>
#FUN_REWIND,	
#net pokeys.kbd48CNC.REWIND.Button =>						
#net pokeys.kbd48CNC.REWIND.LED =>
#FUN_RUN_FROM_HERE, 
#net pokeys.kbd48CNC.RUN_FROM_HERE.Button =>					
#net pokeys.kbd48CNC.RUN_FROM_HERE.LED =>
#FUN_BLOCK_DELETE,	
#net pokeys.kbd48CNC.BLOCK_DELETE.Button =>					
#net pokeys.kbd48CNC.BLOCK_DELETE.LED =>
#FUN_REF,
net pokeys.kbd48CNC.REF.Button =>	halui.joint.selected.home	
net pokeys.kbd48CNC.REF.LED =>		halui.joint.selected.is-homed
#FUN_SPINDLE_CW,
#net pokeys.kbd48CNC.SPINDLE_CW.Button =>	halui.spindle.0.forward	
net pokeys.kbd48CNC.SPINDLE_CW.LED 	<=	halui.spindle.0.runs-forward 
#FUN_SPINDLE_STOP,	
net pokeys.kbd48CNC.SPINDLE_STOP.Button =>	halui.spindle.0.stop		
#net pokeys.kbd48CNC.SPINDLE_STOP.LED 	<=
#FUN_SPINDLE_CCW,
net pokeys.kbd48CNC.SPINDLE_CCW.Button =>	halui.spindle.0.reverse		
net pokeys.kbd48CNC.SPINDLE_CCW.LED 	<=	halui.spindle.0.runs-backward
#FUN_GOTO_0s,
net pokeys.kbd48CNC.GOTO_0s.Button =>	halui.home-all	
#net pokeys.kbd48CNC.GOTO_0s.LED 	<=	halui.joint.N.is-homed
#FUN_SPINDLE_SPEED_PLUS, 
net pokeys.kbd48CNC.SPINDLE_SPEED_PLUS.Button =>	halui.spindle.0.increase	
#net pokeys.kbd48CNC.SPINDLE_SPEED_PLUS.LED 	<=
#FUN_SPINDLE_SPEED_RESET, 
#net pokeys.kbd48CNC.SPINDLE_SPEED_RESET.Button =>					
#net pokeys.kbd48CNC.SPINDLE_SPEED_RESET.LED 	<=
#FUN_SPINDLE_SPEED_MINUS, 
net pokeys.kbd48CNC.SPINDLE_SPEED_MINUS.Button =>	halui.spindle.0.decrease	
#net pokeys.kbd48CNC.SPINDLE_SPEED_MINUS.LED 	<=
#FUN_TEACH,
#net pokeys.kbd48CNC.TEACH.Button =>					
#net pokeys.kbd48CNC.TEACH.LED 	<=
#FUN_FEEDRATE_PLUS,
net pokeys.kbd48CNC.FEEDRATE_PLUS.Button =>	halui.feed-override.increase			
#net pokeys.kbd48CNC.FEEDRATE_PLUS.LED 	<=
#FUN_FEEDRATE_RESET,	
#net pokeys.kbd48CNC.FEEDRATE_RESET.Button =>					
#net pokeys.kbd48CNC.FEEDRATE_RESET.LED 	<=
#FUN_FEEDRATE_MINUS,	
net pokeys.kbd48CNC.FEEDRATE_MINUS.Button =>	halui.feed-override.decrease	
#net pokeys.kbd48CNC.FEEDRATE_MINUS.LED 	<=
	#FUN_STOP_TEACH,
#net pokeys.kbd48CNC.STOP_TEACH.Button =>				
#net pokeys.kbd48CNC.STOP_TEACH.LED 	<=
#FUN_JOG_TOGGLE,	
#net pokeys.kbd48CNC.JOG_TOGGLE.Button =>						
#net pokeys.kbd48CNC.JOG_TOGGLE.LED 	<=
#FUN_JOGRATE_PLUS,	
net pokeys.kbd48CNC.JOGRATE_PLUS.Button =>	halui.joint.selected.increment-plus		
net pokeys.kbd48CNC.JOGRATE_PLUS.Button =>	halui.axis.selected.increment-plus	
#net pokeys.kbd48CNC.JOGRATE_PLUS.LED 	<=
net pokeys.kbd48CNC.JOGRATE_MINUS.Button =>	halui.joint.selected.increment-minus		
net pokeys.kbd48CNC.JOGRATE_MINUS.Button =>	halui.axis.selected.increment-minus	
#net pokeys.kbd48CNC.JOGRATE_MINUS.LED 	<=
#FUN_SHUTTLE_MODE,
#net pokeys.kbd48CNC.SHUTTLE_MODE.Button =>				
#net pokeys.kbd48CNC.SHUTTLE_MODE.LED 	<=

#FUN_JOG_X,
net pokeys.kbd48CNC.JOG_X.Button =>	halui.axis.x.select				
net pokeys.kbd48CNC.JOG_X.LED 	<=	halui.axis.x.is-selected
#FUN_JOG_A,
#net pokeys.kbd48CNC.JOG_A.Button =>	halui.axis.a.select				
#net pokeys.kbd48CNC.JOG_A.LED 	<=	halui.axis.a.is-selected
#FUN_JOG_PLUS,	
net pokeys.kbd48CNC.JOG_PLUS.Button =>	halui.axis.selected.plus		
net pokeys.kbd48CNC.JOG_PLUS.Button =>	halui.joint.selected.plus
#net pokeys.kbd48CNC.JOG_PLUS.LED 	<=
#FUN_JOG_CONT,
#net pokeys.kbd48CNC.JOG_CONT.Button =>
#net pokeys.kbd48CNC.JOG_CONT.LED 	<=
#FUN_JOG_Y,	
net pokeys.kbd48CNC.JOG_Y.Button =>	halui.axis.y.select			
net pokeys.kbd48CNC.JOG_Y.LED 	<=	halui.axis.y.is-selected
	#FUN_JOG_B,
#net pokeys.kbd48CNC.JOG_B.Button =>	halui.axis.b.select			
#net pokeys.kbd48CNC.JOG_B.LED 	<=	halui.axis.b.is-selected
	#FUN_JOG_FAST_TOGGLE, 
#net pokeys.kbd48CNC.JOG_FAST_TOGGLE.Button =>				
#net pokeys.kbd48CNC.JOG_FAST_TOGGLE.LED 	<=
#FUN_JOG_INC,
#net pokeys.kbd48CNC.JOG_INC.Button =>					
#net pokeys.kbd48CNC.JOG_INC.LED 	<=
	#FUN_JOG_Z,
net pokeys.kbd48CNC.JOG_Z.Button =>	halui.axis.z.select			
net pokeys.kbd48CNC.JOG_Z.LED 	<=	halui.axis.z.is-selected
	#FUN_JOG_C,
#net pokeys.kbd48CNC.JOG_C.Button =>	halui.axis.c.select			
#net pokeys.kbd48CNC.JOG_C.LED 	<=	halui.axis.c.is-selected
#FUN_JOG_MINUS,
net pokeys.kbd48CNC.JOG_MINUS.Button =>	halui.axis.selected.minus			
net pokeys.kbd48CNC.JOG_MINUS.Button =>	halui.joint.selected.minus
#net pokeys.kbd48CNC.JOG_MINUS.LED 	<=
#FUN_JOG_MPG,
#net pokeys.kbd48CNC.JOG_MPG.Button =>					
#net pokeys.kbd48CNC.JOG_MPG.LED 	<=
#FUN_JOG_STEP_1,	
#net pokeys.kbd48CNC.JOG_STEP_1.Button =>					
#net pokeys.kbd48CNC.JOG_STEP_1.LED 	<=
#FUN_JOG_STEP_10,
#net pokeys.kbd48CNC.JOG_STEP_10.Button =>						
#net pokeys.kbd48CNC.JOG_STEP_10.LED 	<=
#FUN_JOG_STEP_100,	
#net pokeys.kbd48CNC.JOG_STEP_100.Button =>					
#net pokeys.kbd48CNC.JOG_STEP_100.LED 	<=
#FUN_JOG_STEP_1000
#net pokeys.kbd48CNC.JOG_STEP_1000.Button =>					
#net pokeys.kbd48CNC.JOG_STEP_1000.LED 	<=




#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-ext     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared

