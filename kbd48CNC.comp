component kbd48CNC "PoKeys kbd48CNC abstraction for pokeys";

option userspace yes;
// pin interface to pokeys-component
pin out bit axis.#.selected [8];  // used to map to LED on kbd
pin in bit axis.#.select[8];  // inputs from buttons xyzabc

pin in bit JOG_TOGGLE.Button;
pin in bit JOGRATE-PLUS.Button;
pin in bit JOGRATE-MINUS.Button;
pin in bit JOG-PLUS.Button;
pin in bit JOG-MINUS.Button;
pin in bit JOG-CONT.Button;
pin in bit JOG-FAST-TOGGLE.Button;
pin in bit JOG-INC.Button;
pin in bit JOG-MPG.Button;
pin in bit JOG-STEP-1.Button;
pin in bit JOG-STEP-10.Button;
pin in bit JOG-STEP-100.Button;
pin in bit JOG-STEP-1000.Button;

pin out float JOG-MPG.Scale = 1;
pin in float JOG-INC.increment.in = 1;

pin out bit JOG-TOGGLE.LED;
pin out bit JOGRATE-PLUS.LED;
pin out bit JOGRATE-MINUS.LED;
pin out bit JOG-PLUS.LED;
pin out bit JOG-MINUS.LED;
pin out bit JOG-CONT.LED;
pin out bit JOG-FAST-TOGGLE.LED;
pin out bit JOG-INC.LED;
pin out bit JOG-MPG.LED;
pin out bit JOG-STEP-1.LED;
pin out bit JOG-STEP-10.LED;
pin out bit JOG-STEP-100.LED;
pin out bit JOG-STEP-1000.LED;



// pin interface to HAL Axis/Joint
pin out float axis.#.jog-accel-fraction[6]; //Sets acceleration for wheel jogging to a fraction of the ini max_acceleration for the axis.Values greater than 1 or less than zero are ignored.
pin out s32 axis.#.jog-counts[6]; //Connect to the "counts" pin of an external encoder to use a physical jog wheel.
pin out bit axis.#.jog-enable[6]; //When TRUE(and in manual mode), any change to "jog-counts" will result in motion.When false, "jog-counts" is ignored.
pin out float axis.#.jog-scale[6]; //Sets the distance moved for each count on "jog-counts", in machine units.
pin out bit axis.#.jog-vel-mode[6]; //When FALSE(the default), the jogwheel operates in position mode.The axis will move exactly jog - scale units for each count, regardless of how long that might take.When TRUE, the wheel operates in velocity mode - motion stops when the wheel stops, even if that means the commanded motion is not completed.
pin in bit axis.#.kb-jog-active[6]; //(free planner axis jogging active (keyboard or halui))
pin in bit axis.#.wheel-jog-active[6]; //(free planner axis jogging active (keyboard or halui))

pin out bit axis.#.jog-pos[6];
pin out bit axis.#.jog-neg[6];

pin out bit alive;

license "GPL";

//option extra_link_args "-lPoKeys";

;;

#include <unistd.h>   /* UNIX standard function definitions */

int i = 0;
int activeAxis = 0;
uint8_t JogMode[6] = 0;
uint8_t Jogmultiplier[6] = 1;
uint8_t JogIncrement[6] = 1;


void user_mainloop(void)
{

    //comp_id = hal_init("kbd48CNC");


    while (0xb) {
        FOR_ALL_INSTS() {
            alive = 1;
            usleep(20000);

                for (i = 0; i < 8; i++)
                {
                    if (axis_select(i) != 0)
                    {
                        activeAxis = i;
                        axis_selected(i) != 1;
                    }

                    if (activeAxis = i)
                    {
                        if (JogMode[i] != 0) 
                        {
                            axis_jog_enable(i) = 1;
                            if (JogMode[i] == 1) {
                                JOG_CONT_LED = 1;
                                JOG_INC_LED = 0;
                                JOG_MPG_LED = 0;

                                axis_jog_vel_mode(i) = 1;

                                if (JOG_PLUS_Button(i) != 0)
                                {
                                    axis_jog_pos(i) = 1;
                                }
                                else
                                {
                                    axis_jog_pos(i) = 0;
                                }
                                if (JOG_MINUS_Button(i) != 0)
                                {
                                    axis_jog_neg(i) = 1;
                                }
                                else
                                {
                                    axis_jog_neg(i) = 0;
                                }


                            }
                            else if (JogMode[i] == 2)
                            {
                                JOG_CONT_LED = 0;
                                JOG_INC_LED = 1;
                                JOG_MPG_LED = 0;

                                axis_jog_vel_mode(i) = 0;
                                if (JOG_PLUS_Button(i) != 0)
                                {
                                    axis_jog_pos(i) = 1;
                                }
                                else
                                {
                                    axis_jog_pos(i) = 0;
                                }
                                if (JOG_MINUS_Button(i) != 0)
                                {
                                    axis_jog_neg(i) = 1;
                                }
                                else
                                {
                                    axis_jog_neg(i) = 0;
                                }

                            }
                            else if (JogMode[i] == 3)
                            {
                                JOG_CONT_LED = 0;
                                JOG_INC_LED = 0;
                                JOG_MPG_LED = 1;

                                axis_jog_vel_mode(i) = 1;

                                axis_jog_pos(i) = 0;
                                axis_jog_neg(i) = 0;
                            }
                            else if (JogMode[i] == 4)
                            {
                                JogMode[i] = 0;
                                axis_jog_vel_mode(i) = 0;
                            }


                            if (JOG_STEP_1_Button != 0)
                            {
                                Jogmultiplier[i] = 1;
                            }
                            else if (JOG_STEP_10_Button != 0)
                            {
                                Jogmultiplier[i] = 10;
                            }
                            else if (JOG_STEP_100_Button != 0)
                            {
                                Jogmultiplier[i] = 100;
                            }
                            else if (JOG_STEP_1000_Button != 0)
                            {
                                Jogmultiplier[i] = 1000;
                            }

                            if(Jogmultiplier[i] = 1)
                            {
                                JOG_STEP_1_LED = 1;
                                JOG_STEP_10_LED = 0;
                                JOG_STEP_100_LED = 0;
                                JOG_STEP_1000_LED = 0;
                            }
                            else if (Jogmultiplier[i] = 10)
                            {
                                JOG_STEP_1_LED = 0;
                                JOG_STEP_10_LED = 1;
                                JOG_STEP_100_LED = 0;
                                JOG_STEP_1000_LED = 0;
                            }
                            else if (Jogmultiplier[i] = 100)
                            {
                                JOG_STEP_1_LED = 0;
                                JOG_STEP_10_LED = 0;
                                JOG_STEP_100_LED = 1;
                                JOG_STEP_1000_LED = 0;
                            }
                            else if (Jogmultiplier[i] = 1000)
                            {
                                JOG_STEP_1_LED = 0;
                                JOG_STEP_10_LED = 0;
                                JOG_STEP_100_LED = 0;
                                JOG_STEP_1000_LED = 1;
                            }
                            else
                            {
                                Jogmultiplier[i] = 1;
                            }

                            axis_jog_scale(i) = JogIncrement[i] / Jogmultiplier[i];



                        }
                        else
                        {
                            axis_jog_enable(i) = 0;

                            JOG_STEP_1_LED = 0;
                            JOG_STEP_10_LED = 0;
                            JOG_STEP_100_LED = 0;
                            JOG_STEP_1000_LED = 0;

                            JOG_CONT_LED = 0;
                            JOG_INC_LED = 0;
                            JOG_MPG_LED = 0;
                            axis_jog_pos(i) = 0;
                            axis_jog_neg(i) = 0;
                        }



                    }
                    else
                    {
                        axis_jog_enable(i) = 0;
                        axis_jog_pos(i) = 0;
                        axis_jog_neg(i) = 0;


                    }
                }

                if (JOG_TOGGLE_Button !=0)
                {
                    JogMode[i] ++;
                     if (JogMode[i] > 4) 
                     {
                         JogMode[i] = 0;
                    }
                }

            alive = 0;
            usleep(20000);
        }
    }
}