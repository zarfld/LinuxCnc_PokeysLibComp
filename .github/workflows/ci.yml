name: CI

on:
  push:
    branches:
      - main
      - feature/**
      - bugfix/**
      - improvement/**
      - hotfix/**
  pull_request:
    branches:
      - main
      - feature/**
      - bugfix/**
      - improvement/**
      - hotfix/**
  issues:
    types: [labeled, unlabeled]

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: false

    - name: Check runner availability
      run: |
        echo "Checking runner availability..."
        if [ -z "$RUNNER_NAME" ]; then
          echo "No runner available. Exiting..."
          exit 1
        fi
        echo "Runner $RUNNER_NAME is available."

    - name: Log runner details
      run: |
        echo "Logging runner details..."
        echo "Runner Name: $RUNNER_NAME"
        echo "Runner OS: $RUNNER_OS"
        echo "Runner Architecture: $RUNNER_ARCH"

    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        sudo bash prerequisites.sh

    - name: Install pokeyslib
      run: |
        chmod +x install_pokeyslib.sh
        ./install_pokeyslib.sh

    - name: Build Pokeys Userspace Component
      run: sudo halcompile --install --userspace --extra-link-args="-L/usr/lib -lPoKeys -llinuxcncini" pokeys_uspace/pokeys.c  | tee -a /home/pi/linuxcnc_build.log

    - name: Compile Pokeys HAL Components
      run: |
        sudo halcompile --install pokeys_homecomp.comp | tee -a /home/pi/linuxcnc_build.log
        sudo halcompile --install kbd48CNC.comp | tee -a /home/pi/linuxcnc_build.log
        sudo halcompile --install start_delay_3000.comp | tee -a /home/pi/linuxcnc_build.log
        sudo halcompile --install start_delay_5000.comp | tee -a /home/pi/linuxcnc_build.log

    - name: Final Install
      run: sudo bash install.sh | tee -a /home/pi/linuxcnc_build.log

    - name: Upload logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: Logs
        path: /home/pi/linuxcnc_build.log
        if-no-files-found: ignore

    - name: Comment on issue about failure
      if: ${{ failure() }}
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: | 
          github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: '❌ Build/test pipeline failed. Logs have been attached as an artifact. Please review the log for details.'
          })&#8203;:contentReference[oaicite:7]{index=7}

    - name: Check for adherence to code review guidelines
      run: |
        echo "Checking for adherence to code review guidelines..."
        if ! grep -q "Code Review Guidelines" CODE_REVIEW_GUIDELINES.md; then
            echo "Code review guidelines not found. Please ensure that the guidelines are documented in CODE_REVIEW_GUIDELINES.md."
            exit 1
        fi
        echo "Code review guidelines are documented and accessible."

    - name: Verify conformity with LinuxCNC guidelines and Canonical Device Interface
      run: |
        echo "Verifying conformity with LinuxCNC guidelines and Canonical Device Interface..."
        if ! grep -q "Canonical Device Interface" README.md; then
            echo "Canonical Device Interface not mentioned in README.md. Please ensure that the guidelines are documented."
            exit 1
        fi
        echo "Canonical Device Interface guidelines are documented and accessible."

  close-issue:
    # Only run on pull_request events where the PR was merged into the main branch
    if: ${{ github.event_name == 'pull_request' && github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main' }}&#8203;:contentReference[oaicite:8]{index=8}
    runs-on: self-hosted  # also runs on the Pi runner
    steps:
      - name: Close associated issue
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const branch = context.payload.pull_request.head.ref;
            // Find an open issue that has a label matching the merged branch name
            const issues = await github.paginate(github.rest.issues.listForRepo, {
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: branch
            });
            if (issues.length > 0) {
              const issueNum = issues[0].number;
              await github.rest.issues.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: issueNum,
                state: 'closed'
              });&#8203;:contentReference[oaicite:9]{index=9}
            }

 