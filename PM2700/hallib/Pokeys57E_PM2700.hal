# Erstellt von PNCconf am Thu Mar 31 22:11:13 2022
# Using LinuxCNC version:  2.8
# Änderungen an dieser Datei werden beim nächsten
# overwritten when you run PNCconf again

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadusr -W pokeys
#show pin
#show parameter
#loadrt pid names=pid.x,pid.x2,pid.y,pid.z,pid.s
loadrt pid names=pid.x,pid.z,pid.s
#loadrt pid names=pid.s
#show pin
#show parameter
#loadusr -W xhc-whb04b-6 -HsfB


addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread

#loadrt -W start_delay delay_ms=5000 
loadusr -W start_delay_5000

# external output signals
#net estop-out     => pokeys.0.PEv2.digout.Emergency.out
net machine.is-on => pokeys.0.machine-is-on
# external input signals

# --- MIN X---
net min-x     <=  pokeys.0.PEv2.0.digin.LimitN.in-not

# --- MAX X ---
#net max-x     <=  pokeys.0.PEv2.0.digin.LimitP.in-not

# --- HOME X ---
net home-x     <=  pokeys.0.PEv2.0.digin.Home.in-not

# --- MIN Z---
net min-z     <=  pokeys.0.PEv2.2.digin.LimitN.in-not

# --- MAX Z ---
#net max-z     <=  pokeys.0.PEv2.2.digin.LimitP.in-not

# --- HOME Z ---
net home-z     <=  pokeys.0.PEv2.2.digin.Home.in-not

# --- CYCLE-START ---
#net cycle-start     <=  [HMOT](CARD0).gpio.023.in

# --- ABORT ---
#net abort     <=  [HMOT](CARD0).gpio.024.in

# --- ESTOP-EXT ---
net estop-ext     <=  pokeys.0.PEv2.digin.Emergency.in
setp pokeys.0.PEv2.digin.Emergency.invert 1
#

# --- JOG-X-POS ---
#net jog-x-pos     <=  [HMOT](CARD0).gpio.026.in

# --- JOG-X-NEG ---
#net jog-x-neg     <=  [HMOT](CARD0).gpio.027.in

# --- MIN-HOME-X ---
#net min-home-x     <=  [HMOT](CARD0).gpio.028.in


#*******************
#  AXIS X JOINT 0
#*******************

#setp   pid.x.Pgain     [JOINT_0]P
#setp   pid.x.Igain     [JOINT_0]I
#setp   pid.x.Dgain     [JOINT_0]D
#setp   pid.x.bias      [JOINT_0]BIAS
#setp   pid.x.FF0       [JOINT_0]FF0
#setp   pid.x.FF1       [JOINT_0]FF1
#setp   pid.x.FF2       [JOINT_0]FF2
#setp   pid.x.deadband  [JOINT_0]DEADBAND
#setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
#setp   pid.x.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
#setp   pid.x.maxerror 0.012700

#net x-index-enable  <=> pid.x.index-enable
#net x-enable        =>  pid.x.enable
#net x-pos-cmd       =>  pid.x.command
#net x-pos-fb        =>  pid.x.feedback
#net x-output        <=  pid.x.output


# Step Gen signals/setup
setp   pokeys.0.PEv2.0.stepgen.STEP-SCALE  	   [JOINT_0]STEP_SCALE
setp   pokeys.0.PEv2.0.stepgen.MIN-LIMIT  	   [JOINT_0]MIN_LIMIT
setp   pokeys.0.PEv2.0.stepgen.MAX-LIMIT  	   [JOINT_0]MAX_LIMIT
setp   pokeys.0.PEv2.0.stepgen.HOME-OFFSET  	   [JOINT_0]HOME_OFFSET
setp   pokeys.0.PEv2.0.stepgen.HOME-SEARCH-VEL  	   [JOINT_0]HOME_SEARCH_VEL
setp   pokeys.0.PEv2.0.stepgen.HOME-LATCH-VEL  	   [JOINT_0]HOME_LATCH_VEL
setp   pokeys.0.PEv2.0.stepgen.STEPGEN-MAXVEL         [JOINT_0]STEPGEN_MAXVEL
setp   pokeys.0.PEv2.0.stepgen.STEPGEN-MAXACCEL           [JOINT_0]STEPGEN_MAXACCEL

# ---closedloop stepper signals---

net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-pos-cmd     =>  pokeys.0.PEv2.0.joint-pos-cmd

net x-vel-cmd    <= joint.0.vel-cmd
net x-vel-cmd     =>  pokeys.0.PEv2.0.joint-vel-cmd

net x-pos-fb     <= pokeys.0.PEv2.0.joint-pos-fb
net x-pos-fb     => joint.0.motor-pos-fb

net x-enable     <= joint.0.amp-enable-out
net x-enable     => pokeys.0.PEv2.0.digout.AxisEnable.out

net x-in-position     <= joint.0.in-position
net x-in-position     => pokeys.0.PEv2.0.joint-in-position

# ---Encoder feedback signals/setup---

#setp    pokeys.0.PEv2.0.stepgen.ENCODER-SCALE  [JOINT_0]ENCODER_SCALE

net x-pos-fb               <=  pokeys.0.PEv2.0.joint-pos-fb
net x-pos-fb               =>  joint.0.motor-pos-fb


# ---setup home / limit switch signals---
net home-x     =>  joint.0.home-sw-in
net min-x     =>  joint.0.neg-lim-sw-in
#net max-x     =>  joint.0.pos-lim-sw-in


#*******************
#  AXIS Z JOINT 1
#*******************

#setp   pid.z.Pgain     [JOINT_1]P
#setp   pid.z.Igain     [JOINT_1]I
#setp   pid.z.Dgain     [JOINT_1]D
#setp   pid.z.bias      [JOINT_1]BIAS
#setp   pid.z.FF0       [JOINT_1]FF0
#setp   pid.z.FF1       [JOINT_1]FF1
#setp   pid.z.FF2       [JOINT_1]FF2
#setp   pid.z.deadband  [JOINT_1]DEADBAND
#setp   pid.z.maxoutput [JOINT_1]MAX_OUTPUT
#setp   pid.z.error-previous-target true
# This setting is to limit bogus stepgen
# velocity corrections caused by position
# feedback sample time jitter.
#setp   pid.z.maxerror 0.012700

#net z-index-enable  <=> pid.z.index-enable
#net z-enable        =>  pid.z.enable
#net z-pos-cmd       =>  pid.z.command
#net z-pos-fb        =>  pid.z.feedback
#net z-output        <=  pid.z.output

# Step Gen signals/setup
setp   pokeys.0.PEv2.2.stepgen.STEP-SCALE  	   [JOINT_1]STEP_SCALE
setp   pokeys.0.PEv2.2.stepgen.MIN-LIMIT  	   [JOINT_1]MIN_LIMIT
setp   pokeys.0.PEv2.2.stepgen.MAX-LIMIT 	   [JOINT_1]MAX_LIMIT
setp   pokeys.0.PEv2.2.stepgen.HOME-OFFSET  	   [JOINT_1]HOME_OFFSET
setp   pokeys.0.PEv2.2.stepgen.HOME-SEARCH-VEL  	   [JOINT_1]HOME_SEARCH_VEL
setp   pokeys.0.PEv2.2.stepgen.HOME-LATCH-VEL  	   [JOINT_1]HOME_LATCH_VEL
setp   pokeys.0.PEv2.2.stepgen.STEPGEN-MAXVEL         [JOINT_1]STEPGEN_MAXVEL
setp   pokeys.0.PEv2.2.stepgen.STEPGEN-MAXACCEL           [JOINT_1]STEPGEN_MAXACCEL

# ---closedloop stepper signals---

net z-pos-cmd    <= joint.1.motor-pos-cmd
net z-pos-cmd       =>  pokeys.0.PEv2.2.joint-pos-cmd

net z-vel-cmd    <= joint.1.vel-cmd
net z-vel-cmd     =>  pokeys.0.PEv2.2.joint-vel-cmd

net z-pos-fb     <= pokeys.0.PEv2.2.joint-pos-fb
net z-pos-fb     => joint.1.motor-pos-fb

net z-enable     <= joint.1.amp-enable-out
net z-enable     => pokeys.0.PEv2.2.digout.AxisEnable.out

net z-in-position     <= joint.1.in-position
net z-in-position     => pokeys.0.PEv2.2.joint-in-position

# ---setup home / limit switch signals---

net home-z     =>  joint.1.home-sw-in
net min-z     =>  joint.1.neg-lim-sw-in
#net max-z     =>  joint.1.pos-lim-sw-in

#*******************
#  SPINDLE
#*******************

setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true

setp   pokeys.0.adcout.pwm.period	2500
setp   pokeys.0.adcout.0.max-v	5
setp   pokeys.0.adcout.0.high-limit	5
setp   pokeys.0.adcout.0.low-limit	0
setp   pokeys.0.adcout.0.offset	0
setp   pokeys.0.adcout.0.scale	1

net spindle-index-enable  <=> pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable

# ---Setup spindle at speed signals---
sets spindle-at-speed true

# ---Setup spindle DAC ---
loadrt scale count=1
addf scale.0 servo-thread
setp scale.0.gain 0.002

# direct mapping without PID
net spindle-vel-cmd-rpm spindle.0.speed-out => scale.0.in
#if PID should be used
#net spindle-speed-scale spindle-output => scale.0.in
net spindle-speed-DAC scale.0.out => pokeys.0.adcout.0.value
net spindle-enable => pokeys.0.adcout.0.enable
#net spindle-enable => pokeys.0.PEv2.digout.ExternalRelay-0.out
# Spindelausgang setzen
setp pokeys.0.pins.31.PinFunction 4
net spindle-enable => pokeys.0.digout.31.out

#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

#net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
#net x-is-homed     halui.joint.0.is-homed
#net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
#net z-is-homed     halui.joint.1.is-homed
#net jog-selected-pos      halui.axis.selected.plus
#net jog-selected-neg      halui.axis.selected.minus
#net spindle-manual-cw     halui.spindle.0.forward
#net spindle-manual-ccw    halui.spindle.0.reverse
#net spindle-manual-stop   halui.spindle.0.stop
#net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
#net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---
net probe-in     <=  pokeys.0.PEv2.digin.Probed.in
net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled


#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-ext     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

#loadusr -W hal_manualtoolchange
#net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
#net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
#net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
#net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared

